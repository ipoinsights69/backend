"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/ipos";
exports.ids = ["pages/api/ipos"];
exports.modules = {

/***/ "dotenv":
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("dotenv");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("mongoose");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "redis":
/*!************************!*\
  !*** external "redis" ***!
  \************************/
/***/ ((module) => {

module.exports = require("redis");

/***/ }),

/***/ "v8":
/*!*********************!*\
  !*** external "v8" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("v8");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fipos&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fipos%2Findex.js&middlewareConfigBase64=e30%3D!":
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fipos&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fipos%2Findex.js&middlewareConfigBase64=e30%3D! ***!
  \**********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_ipos_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/ipos/index.js */ \"(api)/./pages/api/ipos/index.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_ipos_index_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_ipos_index_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/ipos\",\n        pathname: \"/api/ipos\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_ipos_index_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmlwb3MmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRmlwb3MlMkZpbmRleC5qcyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUNzRDtBQUN0RDtBQUNBLGlFQUFlLHdFQUFLLENBQUMscURBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLHFEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsid2VicGFjazovL2lwby1zY3JhcGVyLz8wMjQyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9hcGkvaXBvcy9pbmRleC5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2lwb3NcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9pcG9zXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fipos&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fipos%2Findex.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./config/database.js":
/*!****************************!*\
  !*** ./config/database.js ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst mongoose = __webpack_require__(/*! mongoose */ \"mongoose\");\n(__webpack_require__(/*! dotenv */ \"dotenv\").config)();\n// Database connection URI\nconst MONGODB_URI = \"mongodb+srv://geekvb:Shifts323212@ipo.jbjkmyh.mongodb.net/ipo\" || 0;\n// Track connection status\nlet isConnected = false;\n// Connection options\nconst options = {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    serverSelectionTimeoutMS: 5000,\n    maxPoolSize: parseInt(process.env.DB_POOL_SIZE || \"10\", 10),\n    socketTimeoutMS: 45000,\n    family: 4 // Use IPv4, skip trying IPv6\n};\n// Connect to MongoDB\nasync function connectToDatabase() {\n    // If we're already connected, return the existing connection\n    if (isConnected) {\n        console.log(\"Using existing MongoDB connection\");\n        return mongoose.connection;\n    }\n    try {\n        // Set up event listeners for connection\n        mongoose.connection.on(\"connected\", ()=>{\n            isConnected = true;\n            console.log(\"MongoDB connected successfully\");\n        });\n        mongoose.connection.on(\"error\", (err)=>{\n            console.error(\"MongoDB connection error:\", err);\n            isConnected = false;\n        });\n        mongoose.connection.on(\"disconnected\", ()=>{\n            console.log(\"MongoDB disconnected\");\n            isConnected = false;\n        });\n        // Connect to the database\n        await mongoose.connect(MONGODB_URI, options);\n        isConnected = true;\n        return mongoose.connection;\n    } catch (error) {\n        console.error(\"MongoDB connection error:\", error);\n        isConnected = false;\n        // Don't exit the process, let the calling code handle it\n        throw error;\n    }\n}\n// Disconnect from MongoDB\nasync function disconnectFromDatabase() {\n    if (!isConnected) {\n        console.log(\"No MongoDB connection to disconnect\");\n        return;\n    }\n    try {\n        await mongoose.disconnect();\n        isConnected = false;\n        console.log(\"Disconnected from MongoDB\");\n    } catch (error) {\n        console.error(\"Error disconnecting from MongoDB:\", error);\n    }\n}\nmodule.exports = {\n    connectToDatabase,\n    disconnectFromDatabase,\n    connection: mongoose.connection,\n    isConnected: ()=>isConnected\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9jb25maWcvZGF0YWJhc2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFdBQVdDLG1CQUFPQSxDQUFDO0FBQ3pCQSxvREFBd0I7QUFFeEIsMEJBQTBCO0FBQzFCLE1BQU1FLGNBQWNDLCtEQUF1QixJQUFJO0FBRS9DLDBCQUEwQjtBQUMxQixJQUFJRSxjQUFjO0FBRWxCLHFCQUFxQjtBQUNyQixNQUFNQyxVQUFVO0lBQ2RDLGlCQUFpQjtJQUNqQkMsb0JBQW9CO0lBQ3BCQywwQkFBMEI7SUFDMUJDLGFBQWFDLFNBQVNSLFFBQVFDLEdBQUcsQ0FBQ1EsWUFBWSxJQUFJLE1BQU07SUFDeERDLGlCQUFpQjtJQUNqQkMsUUFBUSxFQUFFLDZCQUE2QjtBQUN6QztBQUVBLHFCQUFxQjtBQUNyQixlQUFlQztJQUNiLDZEQUE2RDtJQUM3RCxJQUFJVixhQUFhO1FBQ2ZXLFFBQVFDLEdBQUcsQ0FBQztRQUNaLE9BQU9sQixTQUFTbUIsVUFBVTtJQUM1QjtJQUVBLElBQUk7UUFDRix3Q0FBd0M7UUFDeENuQixTQUFTbUIsVUFBVSxDQUFDQyxFQUFFLENBQUMsYUFBYTtZQUNsQ2QsY0FBYztZQUNkVyxRQUFRQyxHQUFHLENBQUM7UUFDZDtRQUVBbEIsU0FBU21CLFVBQVUsQ0FBQ0MsRUFBRSxDQUFDLFNBQVMsQ0FBQ0M7WUFDL0JKLFFBQVFLLEtBQUssQ0FBQyw2QkFBNkJEO1lBQzNDZixjQUFjO1FBQ2hCO1FBRUFOLFNBQVNtQixVQUFVLENBQUNDLEVBQUUsQ0FBQyxnQkFBZ0I7WUFDckNILFFBQVFDLEdBQUcsQ0FBQztZQUNaWixjQUFjO1FBQ2hCO1FBRUEsMEJBQTBCO1FBQzFCLE1BQU1OLFNBQVN1QixPQUFPLENBQUNwQixhQUFhSTtRQUNwQ0QsY0FBYztRQUNkLE9BQU9OLFNBQVNtQixVQUFVO0lBQzVCLEVBQUUsT0FBT0csT0FBTztRQUNkTCxRQUFRSyxLQUFLLENBQUMsNkJBQTZCQTtRQUMzQ2hCLGNBQWM7UUFDZCx5REFBeUQ7UUFDekQsTUFBTWdCO0lBQ1I7QUFDRjtBQUVBLDBCQUEwQjtBQUMxQixlQUFlRTtJQUNiLElBQUksQ0FBQ2xCLGFBQWE7UUFDaEJXLFFBQVFDLEdBQUcsQ0FBQztRQUNaO0lBQ0Y7SUFFQSxJQUFJO1FBQ0YsTUFBTWxCLFNBQVN5QixVQUFVO1FBQ3pCbkIsY0FBYztRQUNkVyxRQUFRQyxHQUFHLENBQUM7SUFDZCxFQUFFLE9BQU9JLE9BQU87UUFDZEwsUUFBUUssS0FBSyxDQUFDLHFDQUFxQ0E7SUFDckQ7QUFDRjtBQUVBSSxPQUFPQyxPQUFPLEdBQUc7SUFDZlg7SUFDQVE7SUFDQUwsWUFBWW5CLFNBQVNtQixVQUFVO0lBQy9CYixhQUFhLElBQU1BO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXBvLXNjcmFwZXIvLi9jb25maWcvZGF0YWJhc2UuanM/NjkyYSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG5yZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTtcblxuLy8gRGF0YWJhc2UgY29ubmVjdGlvbiBVUklcbmNvbnN0IE1PTkdPREJfVVJJID0gcHJvY2Vzcy5lbnYuTU9OR09EQl9VUkkgfHwgJ21vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcvaXBvX2RhdGEnO1xuXG4vLyBUcmFjayBjb25uZWN0aW9uIHN0YXR1c1xubGV0IGlzQ29ubmVjdGVkID0gZmFsc2U7XG5cbi8vIENvbm5lY3Rpb24gb3B0aW9uc1xuY29uc3Qgb3B0aW9ucyA9IHtcbiAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLFxuICB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWUsXG4gIHNlcnZlclNlbGVjdGlvblRpbWVvdXRNUzogNTAwMCwgLy8gVGltZW91dCBhZnRlciA1c1xuICBtYXhQb29sU2l6ZTogcGFyc2VJbnQocHJvY2Vzcy5lbnYuREJfUE9PTF9TSVpFIHx8ICcxMCcsIDEwKSwgLy8gQ29ubmVjdGlvbiBwb29saW5nXG4gIHNvY2tldFRpbWVvdXRNUzogNDUwMDAsIC8vIENsb3NlIHNvY2tldHMgYWZ0ZXIgNDVzXG4gIGZhbWlseTogNCAvLyBVc2UgSVB2NCwgc2tpcCB0cnlpbmcgSVB2NlxufTtcblxuLy8gQ29ubmVjdCB0byBNb25nb0RCXG5hc3luYyBmdW5jdGlvbiBjb25uZWN0VG9EYXRhYmFzZSgpIHtcbiAgLy8gSWYgd2UncmUgYWxyZWFkeSBjb25uZWN0ZWQsIHJldHVybiB0aGUgZXhpc3RpbmcgY29ubmVjdGlvblxuICBpZiAoaXNDb25uZWN0ZWQpIHtcbiAgICBjb25zb2xlLmxvZygnVXNpbmcgZXhpc3RpbmcgTW9uZ29EQiBjb25uZWN0aW9uJyk7XG4gICAgcmV0dXJuIG1vbmdvb3NlLmNvbm5lY3Rpb247XG4gIH1cblxuICB0cnkge1xuICAgIC8vIFNldCB1cCBldmVudCBsaXN0ZW5lcnMgZm9yIGNvbm5lY3Rpb25cbiAgICBtb25nb29zZS5jb25uZWN0aW9uLm9uKCdjb25uZWN0ZWQnLCAoKSA9PiB7XG4gICAgICBpc0Nvbm5lY3RlZCA9IHRydWU7XG4gICAgICBjb25zb2xlLmxvZygnTW9uZ29EQiBjb25uZWN0ZWQgc3VjY2Vzc2Z1bGx5Jyk7XG4gICAgfSk7XG5cbiAgICBtb25nb29zZS5jb25uZWN0aW9uLm9uKCdlcnJvcicsIChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ01vbmdvREIgY29ubmVjdGlvbiBlcnJvcjonLCBlcnIpO1xuICAgICAgaXNDb25uZWN0ZWQgPSBmYWxzZTtcbiAgICB9KTtcblxuICAgIG1vbmdvb3NlLmNvbm5lY3Rpb24ub24oJ2Rpc2Nvbm5lY3RlZCcsICgpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCdNb25nb0RCIGRpc2Nvbm5lY3RlZCcpO1xuICAgICAgaXNDb25uZWN0ZWQgPSBmYWxzZTtcbiAgICB9KTtcblxuICAgIC8vIENvbm5lY3QgdG8gdGhlIGRhdGFiYXNlXG4gICAgYXdhaXQgbW9uZ29vc2UuY29ubmVjdChNT05HT0RCX1VSSSwgb3B0aW9ucyk7XG4gICAgaXNDb25uZWN0ZWQgPSB0cnVlO1xuICAgIHJldHVybiBtb25nb29zZS5jb25uZWN0aW9uO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ01vbmdvREIgY29ubmVjdGlvbiBlcnJvcjonLCBlcnJvcik7XG4gICAgaXNDb25uZWN0ZWQgPSBmYWxzZTtcbiAgICAvLyBEb24ndCBleGl0IHRoZSBwcm9jZXNzLCBsZXQgdGhlIGNhbGxpbmcgY29kZSBoYW5kbGUgaXRcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG4vLyBEaXNjb25uZWN0IGZyb20gTW9uZ29EQlxuYXN5bmMgZnVuY3Rpb24gZGlzY29ubmVjdEZyb21EYXRhYmFzZSgpIHtcbiAgaWYgKCFpc0Nvbm5lY3RlZCkge1xuICAgIGNvbnNvbGUubG9nKCdObyBNb25nb0RCIGNvbm5lY3Rpb24gdG8gZGlzY29ubmVjdCcpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHRyeSB7XG4gICAgYXdhaXQgbW9uZ29vc2UuZGlzY29ubmVjdCgpO1xuICAgIGlzQ29ubmVjdGVkID0gZmFsc2U7XG4gICAgY29uc29sZS5sb2coJ0Rpc2Nvbm5lY3RlZCBmcm9tIE1vbmdvREInKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBkaXNjb25uZWN0aW5nIGZyb20gTW9uZ29EQjonLCBlcnJvcik7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNvbm5lY3RUb0RhdGFiYXNlLFxuICBkaXNjb25uZWN0RnJvbURhdGFiYXNlLFxuICBjb25uZWN0aW9uOiBtb25nb29zZS5jb25uZWN0aW9uLFxuICBpc0Nvbm5lY3RlZDogKCkgPT4gaXNDb25uZWN0ZWRcbn07ICJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJjb25maWciLCJNT05HT0RCX1VSSSIsInByb2Nlc3MiLCJlbnYiLCJpc0Nvbm5lY3RlZCIsIm9wdGlvbnMiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJzZXJ2ZXJTZWxlY3Rpb25UaW1lb3V0TVMiLCJtYXhQb29sU2l6ZSIsInBhcnNlSW50IiwiREJfUE9PTF9TSVpFIiwic29ja2V0VGltZW91dE1TIiwiZmFtaWx5IiwiY29ubmVjdFRvRGF0YWJhc2UiLCJjb25zb2xlIiwibG9nIiwiY29ubmVjdGlvbiIsIm9uIiwiZXJyIiwiZXJyb3IiLCJjb25uZWN0IiwiZGlzY29ubmVjdEZyb21EYXRhYmFzZSIsImRpc2Nvbm5lY3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./config/database.js\n");

/***/ }),

/***/ "(api)/./models/IpoModel.js":
/*!****************************!*\
  !*** ./models/IpoModel.js ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst mongoose = __webpack_require__(/*! mongoose */ \"mongoose\");\n// Schema for IPO data\nconst ipoSchema = new mongoose.Schema({\n    ipo_id: {\n        type: String,\n        required: true,\n        unique: true,\n        index: true\n    },\n    // Remove any conflicting ipoId field if it exists\n    ipoId: {\n        type: String,\n        select: false // Exclude from queries\n    },\n    ipo_name: {\n        type: String,\n        required: true,\n        index: true\n    },\n    year: {\n        type: Number,\n        required: true,\n        index: true\n    },\n    company_name: {\n        type: String,\n        index: true\n    },\n    source_url: {\n        type: String,\n        required: true\n    },\n    data: {\n        type: Object\n    },\n    opening_date: {\n        type: Date,\n        index: true\n    },\n    closing_date: {\n        type: Date\n    },\n    listing_date: {\n        type: Date\n    },\n    issue_price: {\n        type: String\n    },\n    issue_price_numeric: {\n        type: Number\n    },\n    issue_size: {\n        type: String\n    },\n    issue_size_numeric: {\n        type: Number\n    },\n    lot_size: {\n        type: Number\n    },\n    allotment_status: {\n        type: String\n    },\n    listing_gains: {\n        type: String\n    },\n    listing_gains_numeric: {\n        type: Number,\n        index: true\n    },\n    status: {\n        type: String,\n        enum: [\n            \"upcoming\",\n            \"open\",\n            \"closed\",\n            \"listed\",\n            \"withdrawn\"\n        ],\n        default: \"upcoming\",\n        index: true\n    },\n    scraped_at: {\n        type: Date,\n        default: Date.now\n    },\n    updated_at: {\n        type: Date,\n        default: Date.now\n    },\n    raw_data: {\n        type: Object\n    },\n    logo_url: {\n        type: String\n    }\n}, {\n    timestamps: true,\n    strict: false // Allows flexibility for additional fields\n});\n// Index for efficient searches\nipoSchema.index({\n    ipo_name: \"text\",\n    company_name: \"text\"\n});\n// Middleware to ensure proper ID fields before save\nipoSchema.pre(\"save\", function(next) {\n    // Make sure ipo_id exists and is not null/undefined\n    if (!this.ipo_id) {\n        if (this.ipoId) {\n            this.ipo_id = this.ipoId;\n        } else if (this.year && this.ipo_name) {\n            // Generate an ID if needed\n            const sanitizedName = this.ipo_name.toLowerCase().replace(/[^a-z0-9]/g, \"_\");\n            this.ipo_id = `${this.year}_${sanitizedName}`;\n        } else {\n            return next(new Error(\"Cannot generate ipo_id: missing required fields\"));\n        }\n    }\n    // Remove ipoId to avoid conflicts\n    this.ipoId = undefined;\n    next();\n});\n// Create or update IPO data\nipoSchema.statics.upsertIpo = async function(ipoData) {\n    // Ensure ipo_id exists\n    if (!ipoData.ipo_id) {\n        if (ipoData.ipoId) {\n            ipoData.ipo_id = ipoData.ipoId;\n            delete ipoData.ipoId; // Remove to avoid conflicts\n        } else if (ipoData.year && (ipoData.ipo_name || ipoData.company_name)) {\n            const name = ipoData.ipo_name || ipoData.company_name;\n            const sanitizedName = name.toLowerCase().replace(/[^a-z0-9]/g, \"_\");\n            ipoData.ipo_id = `${ipoData.year}_${sanitizedName}`;\n        } else {\n            throw new Error(\"IPO ID is required for upserting and cannot be generated from available data\");\n        }\n    }\n    // Create a processed version with important fields extracted to top level\n    const processedData = {\n        ...ipoData,\n        company_name: ipoData.metadata?.company_name || ipoData.ipo_name || ipoData.company_name,\n        year: ipoData.metadata?.year || ipoData.year || new Date().getFullYear(),\n        source_url: ipoData._source_url || ipoData.source_url || \"\",\n        scraped_at: new Date(ipoData._scraped_at || Date.now()),\n        updated_at: new Date()\n    };\n    // Prioritize direct date fields first, then check in multiple possible locations\n    processedData.opening_date = parseDate(ipoData.opening_date || ipoData.basicDetails?.ipoOpenDate || ipoData.data?.opening_date || ipoData.data?.issue_opening_date || // Extract from ipoDate format \"January 7, 2025 to January 9, 2025\"\n    (ipoData.basicDetails?.ipoDate ? ipoData.basicDetails.ipoDate.split(\" to \")[0] : null));\n    processedData.closing_date = parseDate(ipoData.closing_date || ipoData.basicDetails?.ipoCloseDate || ipoData.data?.closing_date || ipoData.data?.issue_closing_date || // Extract from ipoDate format \"January 7, 2025 to January 9, 2025\"\n    (ipoData.basicDetails?.ipoDate ? ipoData.basicDetails.ipoDate.split(\" to \")[1] : null));\n    processedData.listing_date = parseDate(ipoData.listing_date || ipoData.basicDetails?.ipoListingDate || ipoData.data?.listing_date);\n    // Extract other key fields\n    processedData.issue_price = ipoData.basicDetails?.issuePrice || ipoData.data?.issue_price || ipoData.data?.price_band || ipoData.issue_price;\n    processedData.issue_size = ipoData.basicDetails?.issueSize || ipoData.data?.issue_size || ipoData.data?.issue_amount || ipoData.issue_size;\n    processedData.lot_size = parseInt(ipoData.basicDetails?.lotSize || ipoData.data?.lot_size || ipoData.lot_size || \"0\", 10) || null;\n    processedData.logo_url = ipoData.logo || null;\n    // Extract numeric values for price and size for aggregation\n    if (processedData.issue_price) {\n        const priceMatch = processedData.issue_price.match(/\\d+(\\.\\d+)?/);\n        processedData.issue_price_numeric = priceMatch ? parseFloat(priceMatch[0]) : null;\n    }\n    if (processedData.issue_size) {\n        const sizeMatch = processedData.issue_size.match(/\\d+(\\.\\d+)?/);\n        processedData.issue_size_numeric = sizeMatch ? parseFloat(sizeMatch[0]) : null;\n    }\n    // Extract listing gains percentage for performance tracking\n    if (processedData.listing_gains) {\n        const gainsMatch = processedData.listing_gains.match(/(-?\\d+(\\.\\d+)?)\\s*%/);\n        processedData.listing_gains_numeric = gainsMatch ? parseFloat(gainsMatch[1]) : null;\n    } else if (ipoData.listingDayTrading && ipoData.listingDayTrading.data) {\n        // Calculate listing gains from listing day trading data\n        const data = ipoData.listingDayTrading.data;\n        const exchange = Object.keys(data.final_issue_price || {})[0];\n        if (exchange && data.final_issue_price[exchange] && data.last_trade[exchange]) {\n            const issuePrice = parseFloat(data.final_issue_price[exchange]);\n            const lastTradePrice = parseFloat(data.last_trade[exchange]);\n            if (!isNaN(issuePrice) && !isNaN(lastTradePrice) && issuePrice > 0) {\n                const listingGain = (lastTradePrice - issuePrice) / issuePrice * 100;\n                processedData.listing_gains = `${listingGain.toFixed(2)}%`;\n                processedData.listing_gains_numeric = parseFloat(listingGain.toFixed(2));\n            }\n        }\n    }\n    // Determine status based on dates\n    processedData.status = determineIpoStatus(processedData);\n    // Upsert the document\n    return this.findOneAndUpdate({\n        ipo_id: processedData.ipo_id\n    }, processedData, {\n        upsert: true,\n        new: true,\n        setDefaultsOnInsert: true\n    });\n};\n// Helper to parse dates\nfunction parseDate(dateStr) {\n    if (!dateStr) return null;\n    try {\n        // Handle different date formats\n        if (typeof dateStr === \"string\") {\n            // Format: \"Tue, Jan 7, 2025\"\n            if (dateStr.includes(\",\")) {\n                return new Date(dateStr);\n            }\n            // Format: \"January 7, 2025\"\n            const parts = dateStr.split(\" \");\n            if (parts.length >= 3) {\n                // Try to parse as is first\n                const date = new Date(dateStr);\n                if (!isNaN(date.getTime())) {\n                    return date;\n                }\n                // Try parsing with just month, day, year\n                const monthIndex = [\n                    \"january\",\n                    \"february\",\n                    \"march\",\n                    \"april\",\n                    \"may\",\n                    \"june\",\n                    \"july\",\n                    \"august\",\n                    \"september\",\n                    \"october\",\n                    \"november\",\n                    \"december\"\n                ].indexOf(parts[0].toLowerCase());\n                if (monthIndex !== -1) {\n                    // Parse day (remove comma if present)\n                    const day = parseInt(parts[1].replace(\",\", \"\"), 10);\n                    // Parse year\n                    const year = parseInt(parts[parts.length - 1], 10);\n                    return new Date(year, monthIndex, day);\n                }\n            }\n        }\n        // Default parsing\n        return new Date(dateStr);\n    } catch (e) {\n        console.error(`Error parsing date: ${dateStr}`, e);\n        return null;\n    }\n}\n// Determine IPO status based on dates\nfunction determineIpoStatus(ipo) {\n    const now = new Date();\n    if (!ipo.opening_date) return \"upcoming\";\n    if (ipo.listing_date && now >= ipo.listing_date) return \"listed\";\n    if (ipo.closing_date && now >= ipo.closing_date) return \"closed\";\n    if (now >= ipo.opening_date) return \"open\";\n    return \"upcoming\";\n}\n// Check if the model already exists to prevent \"OverwriteModelError\"\nconst IpoModel = mongoose.models.Ipo || mongoose.model(\"Ipo\", ipoSchema);\nmodule.exports = IpoModel;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./models/IpoModel.js\n");

/***/ }),

/***/ "(api)/./pages/api/ipos/index.js":
/*!*********************************!*\
  !*** ./pages/api/ipos/index.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _config_database__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../config/database */ \"(api)/./config/database.js\");\n/* harmony import */ var _config_database__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_config_database__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _models_IpoModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../models/IpoModel */ \"(api)/./models/IpoModel.js\");\n/* harmony import */ var _models_IpoModel__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_models_IpoModel__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/cache */ \"(api)/./pages/api/utils/cache.js\");\n\n\n\n// Main handler for IPO listing\nconst handler = async (req, res)=>{\n    switch(req.method){\n        case \"GET\":\n            return getIpos(req, res);\n        default:\n            return res.status(405).json({\n                error: \"Method not allowed\"\n            });\n    }\n};\n// Get all IPOs with pagination, sorting, and filtering\nconst getIpos = async (req, res)=>{\n    try {\n        // Ensure database connection\n        await (0,_config_database__WEBPACK_IMPORTED_MODULE_0__.connectToDatabase)();\n        // Parse query parameters\n        const page = parseInt(req.query.page || \"1\", 10);\n        const limit = parseInt(req.query.limit || \"10\", 10);\n        const sort = req.query.sort || \"-opening_date\"; // Default sort by opening date desc\n        const skip = (page - 1) * limit;\n        // Build filter based on query parameters\n        const filter = {};\n        // Add year filter if provided\n        if (req.query.year) {\n            filter.year = parseInt(req.query.year, 10);\n        }\n        // Add status filter if provided\n        if (req.query.status) {\n            filter.status = req.query.status;\n        }\n        // Add price range filter if provided\n        if (req.query.minPrice || req.query.maxPrice) {\n            filter.issue_price_numeric = {};\n            if (req.query.minPrice) {\n                filter.issue_price_numeric.$gte = parseFloat(req.query.minPrice);\n            }\n            if (req.query.maxPrice) {\n                filter.issue_price_numeric.$lte = parseFloat(req.query.maxPrice);\n            }\n        }\n        // Create array of promises for parallel execution\n        const [ipos, total] = await Promise.all([\n            _models_IpoModel__WEBPACK_IMPORTED_MODULE_1___default().find(filter).sort(sort).skip(skip).limit(limit).select(\"ipo_id ipo_name company_name year opening_date closing_date listing_date issue_price status logo_url\").lean(),\n            _models_IpoModel__WEBPACK_IMPORTED_MODULE_1___default().countDocuments(filter)\n        ]);\n        // Check if we have results\n        if (total === 0) {\n            return res.status(200).json({\n                data: [],\n                page,\n                limit,\n                total: 0,\n                totalPages: 0,\n                message: \"No IPOs found matching the criteria\"\n            });\n        }\n        // Return paginated results\n        return res.status(200).json({\n            data: ipos || [],\n            page,\n            limit,\n            total,\n            totalPages: Math.ceil(total / limit)\n        });\n    } catch (error) {\n        console.error(\"Error fetching IPOs:\", error);\n        return res.status(500).json({\n            error: \"Failed to fetch IPOs\"\n        });\n    }\n};\n// Export the handler with cache middleware (1 minute cache)\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_utils_cache__WEBPACK_IMPORTED_MODULE_2__.withCache)(handler, 60));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFlUix1REFBU0EsQ0FBQ0MsU0FBUyxHQUFHLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pcG8tc2NyYXBlci8uL3BhZ2VzL2FwaS9pcG9zL2luZGV4LmpzP2I1YWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29ubmVjdFRvRGF0YWJhc2UgfSBmcm9tICcuLi8uLi8uLi9jb25maWcvZGF0YWJhc2UnO1xuaW1wb3J0IElwb01vZGVsIGZyb20gJy4uLy4uLy4uL21vZGVscy9JcG9Nb2RlbCc7XG5pbXBvcnQgeyB3aXRoQ2FjaGUgfSBmcm9tICcuLi91dGlscy9jYWNoZSc7XG5cbi8vIE1haW4gaGFuZGxlciBmb3IgSVBPIGxpc3RpbmdcbmNvbnN0IGhhbmRsZXIgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgc3dpdGNoIChyZXEubWV0aG9kKSB7XG4gICAgY2FzZSAnR0VUJzpcbiAgICAgIHJldHVybiBnZXRJcG9zKHJlcSwgcmVzKTtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA1KS5qc29uKHsgZXJyb3I6ICdNZXRob2Qgbm90IGFsbG93ZWQnIH0pO1xuICB9XG59O1xuXG4vLyBHZXQgYWxsIElQT3Mgd2l0aCBwYWdpbmF0aW9uLCBzb3J0aW5nLCBhbmQgZmlsdGVyaW5nXG5jb25zdCBnZXRJcG9zID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgLy8gRW5zdXJlIGRhdGFiYXNlIGNvbm5lY3Rpb25cbiAgICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpO1xuICAgIFxuICAgIC8vIFBhcnNlIHF1ZXJ5IHBhcmFtZXRlcnNcbiAgICBjb25zdCBwYWdlID0gcGFyc2VJbnQocmVxLnF1ZXJ5LnBhZ2UgfHwgJzEnLCAxMCk7XG4gICAgY29uc3QgbGltaXQgPSBwYXJzZUludChyZXEucXVlcnkubGltaXQgfHwgJzEwJywgMTApO1xuICAgIGNvbnN0IHNvcnQgPSByZXEucXVlcnkuc29ydCB8fCAnLW9wZW5pbmdfZGF0ZSc7IC8vIERlZmF1bHQgc29ydCBieSBvcGVuaW5nIGRhdGUgZGVzY1xuICAgIGNvbnN0IHNraXAgPSAocGFnZSAtIDEpICogbGltaXQ7XG4gICAgXG4gICAgLy8gQnVpbGQgZmlsdGVyIGJhc2VkIG9uIHF1ZXJ5IHBhcmFtZXRlcnNcbiAgICBjb25zdCBmaWx0ZXIgPSB7fTtcbiAgICBcbiAgICAvLyBBZGQgeWVhciBmaWx0ZXIgaWYgcHJvdmlkZWRcbiAgICBpZiAocmVxLnF1ZXJ5LnllYXIpIHtcbiAgICAgIGZpbHRlci55ZWFyID0gcGFyc2VJbnQocmVxLnF1ZXJ5LnllYXIsIDEwKTtcbiAgICB9XG4gICAgXG4gICAgLy8gQWRkIHN0YXR1cyBmaWx0ZXIgaWYgcHJvdmlkZWRcbiAgICBpZiAocmVxLnF1ZXJ5LnN0YXR1cykge1xuICAgICAgZmlsdGVyLnN0YXR1cyA9IHJlcS5xdWVyeS5zdGF0dXM7XG4gICAgfVxuICAgIFxuICAgIC8vIEFkZCBwcmljZSByYW5nZSBmaWx0ZXIgaWYgcHJvdmlkZWRcbiAgICBpZiAocmVxLnF1ZXJ5Lm1pblByaWNlIHx8IHJlcS5xdWVyeS5tYXhQcmljZSkge1xuICAgICAgZmlsdGVyLmlzc3VlX3ByaWNlX251bWVyaWMgPSB7fTtcbiAgICAgIGlmIChyZXEucXVlcnkubWluUHJpY2UpIHtcbiAgICAgICAgZmlsdGVyLmlzc3VlX3ByaWNlX251bWVyaWMuJGd0ZSA9IHBhcnNlRmxvYXQocmVxLnF1ZXJ5Lm1pblByaWNlKTtcbiAgICAgIH1cbiAgICAgIGlmIChyZXEucXVlcnkubWF4UHJpY2UpIHtcbiAgICAgICAgZmlsdGVyLmlzc3VlX3ByaWNlX251bWVyaWMuJGx0ZSA9IHBhcnNlRmxvYXQocmVxLnF1ZXJ5Lm1heFByaWNlKTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLy8gQ3JlYXRlIGFycmF5IG9mIHByb21pc2VzIGZvciBwYXJhbGxlbCBleGVjdXRpb25cbiAgICBjb25zdCBbaXBvcywgdG90YWxdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgSXBvTW9kZWwuZmluZChmaWx0ZXIpXG4gICAgICAgIC5zb3J0KHNvcnQpXG4gICAgICAgIC5za2lwKHNraXApXG4gICAgICAgIC5saW1pdChsaW1pdClcbiAgICAgICAgLnNlbGVjdCgnaXBvX2lkIGlwb19uYW1lIGNvbXBhbnlfbmFtZSB5ZWFyIG9wZW5pbmdfZGF0ZSBjbG9zaW5nX2RhdGUgbGlzdGluZ19kYXRlIGlzc3VlX3ByaWNlIHN0YXR1cyBsb2dvX3VybCcpXG4gICAgICAgIC5sZWFuKCksIC8vIFVzZSBsZWFuIGZvciBiZXR0ZXIgcGVyZm9ybWFuY2VcbiAgICAgIFxuICAgICAgSXBvTW9kZWwuY291bnREb2N1bWVudHMoZmlsdGVyKVxuICAgIF0pO1xuICAgIFxuICAgIC8vIENoZWNrIGlmIHdlIGhhdmUgcmVzdWx0c1xuICAgIGlmICh0b3RhbCA9PT0gMCkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgZGF0YTogW10sXG4gICAgICAgIHBhZ2UsXG4gICAgICAgIGxpbWl0LFxuICAgICAgICB0b3RhbDogMCxcbiAgICAgICAgdG90YWxQYWdlczogMCxcbiAgICAgICAgbWVzc2FnZTogJ05vIElQT3MgZm91bmQgbWF0Y2hpbmcgdGhlIGNyaXRlcmlhJ1xuICAgICAgfSk7XG4gICAgfVxuICAgIFxuICAgIC8vIFJldHVybiBwYWdpbmF0ZWQgcmVzdWx0c1xuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICBkYXRhOiBpcG9zIHx8IFtdLFxuICAgICAgcGFnZSxcbiAgICAgIGxpbWl0LFxuICAgICAgdG90YWwsXG4gICAgICB0b3RhbFBhZ2VzOiBNYXRoLmNlaWwodG90YWwgLyBsaW1pdClcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBJUE9zOicsIGVycm9yKTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogJ0ZhaWxlZCB0byBmZXRjaCBJUE9zJyB9KTtcbiAgfVxufTtcblxuLy8gRXhwb3J0IHRoZSBoYW5kbGVyIHdpdGggY2FjaGUgbWlkZGxld2FyZSAoMSBtaW51dGUgY2FjaGUpXG5leHBvcnQgZGVmYXVsdCB3aXRoQ2FjaGUoaGFuZGxlciwgNjApOyAiXSwibmFtZXMiOlsiY29ubmVjdFRvRGF0YWJhc2UiLCJJcG9Nb2RlbCIsIndpdGhDYWNoZSIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJnZXRJcG9zIiwic3RhdHVzIiwianNvbiIsImVycm9yIiwicGFnZSIsInBhcnNlSW50IiwicXVlcnkiLCJsaW1pdCIsInNvcnQiLCJza2lwIiwiZmlsdGVyIiwieWVhciIsIm1pblByaWNlIiwibWF4UHJpY2UiLCJpc3N1ZV9wcmljZV9udW1lcmljIiwiJGd0ZSIsInBhcnNlRmxvYXQiLCIkbHRlIiwiaXBvcyIsInRvdGFsIiwiUHJvbWlzZSIsImFsbCIsImZpbmQiLCJzZWxlY3QiLCJsZWFuIiwiY291bnREb2N1bWVudHMiLCJkYXRhIiwidG90YWxQYWdlcyIsIm1lc3NhZ2UiLCJNYXRoIiwiY2VpbCIsImNvbnNvbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/ipos/index.js\n");

/***/ }),

/***/ "(api)/./pages/api/utils/cache.js":
/*!**********************************!*\
  !*** ./pages/api/utils/cache.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearCacheKey: () => (/* binding */ clearCacheKey),\n/* harmony export */   createProjection: () => (/* binding */ createProjection),\n/* harmony export */   getCachedData: () => (/* binding */ getCachedData),\n/* harmony export */   setCachedData: () => (/* binding */ setCachedData),\n/* harmony export */   withCache: () => (/* binding */ withCache)\n/* harmony export */ });\n/* harmony import */ var v8__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! v8 */ \"v8\");\n/* harmony import */ var v8__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(v8__WEBPACK_IMPORTED_MODULE_0__);\n\n// In-memory cache for development/small deployments\nconst memoryCache = new Map();\n/**\n * Check if Redis is available\n * @returns {boolean} - Whether Redis is available\n */ const isRedisAvailable = ()=>{\n    return process.env.REDIS_URL && process.env.USE_REDIS === \"true\";\n};\n/**\n * Get Redis client\n * @returns {Object|null} - Redis client or null\n */ const getRedisClient = async ()=>{\n    if (!isRedisAvailable()) return null;\n    try {\n        // Dynamic import to avoid requiring Redis in environments where it's not used\n        const { createClient } = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! redis */ \"redis\", 23));\n        const client = createClient({\n            url: process.env.REDIS_URL\n        });\n        await client.connect();\n        return client;\n    } catch (error) {\n        console.error(\"Redis connection error:\", error);\n        return null;\n    }\n};\n/**\n * Get data from cache\n * @param {string} key - Cache key\n * @param {number} ttl - Time to live in seconds\n * @returns {Promise<Object|null>} - Cached data or null\n */ const getCachedData = async (key, ttl = 300)=>{\n    // Try Redis first if available\n    if (isRedisAvailable()) {\n        try {\n            const client = await getRedisClient();\n            if (!client) return null;\n            const data = await client.get(key);\n            await client.quit();\n            if (data) {\n                console.log(`Cache hit for key: ${key}`);\n                return JSON.parse(data);\n            }\n            return null;\n        } catch (error) {\n            console.error(\"Redis get error:\", error);\n        // Fall back to memory cache if Redis fails\n        }\n    }\n    // Memory cache fallback\n    const cachedItem = memoryCache.get(key);\n    if (cachedItem && cachedItem.expiry > Date.now()) {\n        console.log(`Memory cache hit for key: ${key}`);\n        return cachedItem.data;\n    }\n    return null;\n};\n/**\n * Set data in cache\n * @param {string} key - Cache key\n * @param {Object} data - Data to cache\n * @param {number} ttl - Time to live in seconds\n * @returns {Promise<boolean>} - Whether cache was set\n */ const setCachedData = async (key, data, ttl = 300)=>{\n    // Try Redis first if available\n    if (isRedisAvailable()) {\n        try {\n            const client = await getRedisClient();\n            if (!client) return false;\n            await client.setEx(key, ttl, JSON.stringify(data));\n            await client.quit();\n            return true;\n        } catch (error) {\n            console.error(\"Redis set error:\", error);\n        // Fall back to memory cache if Redis fails\n        }\n    }\n    // Memory cache fallback\n    memoryCache.set(key, {\n        data,\n        expiry: Date.now() + ttl * 1000\n    });\n    // Clean up expired items occasionally\n    if (Math.random() < 0.1) {\n        for (const [k, v] of memoryCache.entries()){\n            if (v.expiry < Date.now()) {\n                memoryCache.delete(k);\n            }\n        }\n    }\n    return true;\n};\n/**\n * Clear cache for a specific key\n * @param {string} key - Cache key\n * @returns {Promise<boolean>} - Whether cache was cleared\n */ const clearCacheKey = async (key)=>{\n    // Try Redis first if available\n    if (isRedisAvailable()) {\n        try {\n            const client = await getRedisClient();\n            if (!client) return false;\n            await client.del(key);\n            await client.quit();\n            return true;\n        } catch (error) {\n            console.error(\"Redis delete error:\", error);\n        }\n    }\n    // Memory cache fallback\n    memoryCache.delete(key);\n    return true;\n};\n/**\n * Cache middleware for API handlers\n * @param {Function} handler - API handler\n * @param {number} ttl - Time to live in seconds (default: 60)\n * @returns {Function} - Cached API handler\n */ const withCache = (handler, ttl = 60)=>async (req, res)=>{\n        // Set cache control headers\n        const cacheSeconds = parseInt(\"60\" || 0, 10);\n        res.setHeader(\"Cache-Control\", `public, s-maxage=${cacheSeconds}, stale-while-revalidate=${cacheSeconds * 2}`);\n        return handler(req, res);\n    };\n/**\n * Create a query projection object from requested sections\n * @param {string|string[]} sections - Sections to include\n * @returns {Object} - Projection object\n */ const createProjection = (sections)=>{\n    if (!sections) return {};\n    const projection = {};\n    // Handle array of sections\n    if (Array.isArray(sections)) {\n        sections.forEach((section)=>{\n            projection[section] = 1;\n        });\n        // Always include ipo_id, year and company_name\n        projection.ipo_id = 1;\n        projection.year = 1;\n        projection.company_name = 1;\n        return projection;\n    }\n    // Handle comma-separated string\n    if (typeof sections === \"string\") {\n        sections.split(\",\").forEach((section)=>{\n            projection[section.trim()] = 1;\n        });\n        // Always include ipo_id, year and company_name\n        projection.ipo_id = 1;\n        projection.year = 1;\n        projection.company_name = 1;\n        return projection;\n    }\n    return {};\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/utils/cache.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fipos&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fipos%2Findex.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();