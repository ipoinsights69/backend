"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/admin/data-operations";
exports.ids = ["pages/api/admin/data-operations"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Fdata-operations&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fadmin%2Fdata-operations.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Fdata-operations&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fadmin%2Fdata-operations.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_admin_data_operations_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/admin/data-operations.js */ \"(api)/./pages/api/admin/data-operations.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_admin_data_operations_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_admin_data_operations_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/admin/data-operations\",\n        pathname: \"/api/admin/data-operations\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_admin_data_operations_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmFkbWluJTJGZGF0YS1vcGVyYXRpb25zJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZhcGklMkZhZG1pbiUyRmRhdGEtb3BlcmF0aW9ucy5qcyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUNpRTtBQUNqRTtBQUNBLGlFQUFlLHdFQUFLLENBQUMsZ0VBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLGdFQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsid2VicGFjazovL2lwby1zY3JhcGVyLz8yNzUzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9hcGkvYWRtaW4vZGF0YS1vcGVyYXRpb25zLmpzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYWRtaW4vZGF0YS1vcGVyYXRpb25zXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYWRtaW4vZGF0YS1vcGVyYXRpb25zXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Fdata-operations&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fadmin%2Fdata-operations.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/admin/data-operations.js":
/*!********************************************!*\
  !*** ./pages/api/admin/data-operations.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _operation_status__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation-status */ \"(api)/./pages/api/admin/operation-status.js\");\n/* harmony import */ var _operation_logs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation-logs */ \"(api)/./pages/api/admin/operation-logs.js\");\n\n\n\n\n// Convert exec to promise-based\nconst execAsync = (0,util__WEBPACK_IMPORTED_MODULE_1__.promisify)(child_process__WEBPACK_IMPORTED_MODULE_0__.exec);\n// Authentication middleware\nconst authenticate = (req, res, handler)=>{\n    const authToken = req.headers.authorization?.split(\" \")[1];\n    const validToken = process.env.ADMIN_API_TOKEN;\n    if (!authToken || authToken !== validToken) {\n        return res.status(401).json({\n            error: \"Unauthorized: Invalid or missing token\"\n        });\n    }\n    return handler(req, res);\n};\n// Main handler for admin operations\nasync function handler(req, res) {\n    // Only allow POST requests\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        const { operation, year, threads = 5, overwrite = false, cronName, cronSchedule, cronEnabled = true } = req.body;\n        if (!operation) {\n            return res.status(400).json({\n                error: \"Operation parameter is required\"\n            });\n        }\n        // Validate year for all operations except cron management\n        if (operation !== \"setup-cron\" && operation !== \"list-crons\" && operation !== \"remove-cron\") {\n            if (!year || isNaN(parseInt(year))) {\n                return res.status(400).json({\n                    error: \"Valid year parameter is required\"\n                });\n            }\n        }\n        // Sanitize inputs to prevent command injection\n        const sanitizedYear = parseInt(year || new Date().getFullYear(), 10);\n        const sanitizedThreads = parseInt(threads, 10);\n        const sanitizedOverwrite = overwrite === true;\n        // Sanitize cron inputs if provided\n        let sanitizedCronName = \"\";\n        let sanitizedCronSchedule = \"\";\n        if (cronName) {\n            // Remove any characters that could be used for command injection\n            sanitizedCronName = cronName.replace(/[^a-zA-Z0-9_-]/g, \"\");\n            if (sanitizedCronName !== cronName) {\n                return res.status(400).json({\n                    error: \"Cron name contains invalid characters. Use only letters, numbers, hyphens, and underscores.\"\n                });\n            }\n        }\n        if (cronSchedule) {\n            // Basic validation for cron schedule format\n            const cronRegex = /^(\\*|([0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])|\\*\\/([0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])) (\\*|([0-9]|1[0-9]|2[0-3])|\\*\\/([0-9]|1[0-9]|2[0-3])) (\\*|([1-9]|1[0-9]|2[0-9]|3[0-1])|\\*\\/([1-9]|1[0-9]|2[0-9]|3[0-1])) (\\*|([1-9]|1[0-2])|\\*\\/([1-9]|1[0-2])) (\\*|([0-6])|\\*\\/([0-6]))$/;\n            if (!cronRegex.test(cronSchedule)) {\n                return res.status(400).json({\n                    error: 'Invalid cron schedule format. Use standard cron syntax (e.g., \"0 0 * * *\" for daily at midnight)'\n                });\n            }\n            sanitizedCronSchedule = cronSchedule;\n        }\n        let command;\n        let operationName;\n        switch(operation){\n            case \"scrape\":\n                command = `node scripts/scrapeIpos.js --year ${sanitizedYear} --start-year ${sanitizedYear} --end-year ${sanitizedYear} --threads ${sanitizedThreads} ${sanitizedOverwrite ? \"--overwrite true\" : \"\"}`;\n                operationName = \"Scrape\";\n                break;\n            case \"upload\":\n                command = `node scripts/uploadToMongo.js --year ${sanitizedYear} --start-year ${sanitizedYear} --end-year ${sanitizedYear}`;\n                operationName = \"Upload\";\n                break;\n            case \"scrape-and-upload\":\n                command = `node scripts/scrapeIpos.js --year ${sanitizedYear} --start-year ${sanitizedYear} --end-year ${sanitizedYear} --threads ${sanitizedThreads} ${sanitizedOverwrite ? \"--overwrite true\" : \"\"} && node scripts/uploadToMongo.js --year ${sanitizedYear} --start-year ${sanitizedYear} --end-year ${sanitizedYear}`;\n                operationName = \"Scrape and Upload\";\n                break;\n            case \"setup-cron\":\n                // Validate required cron parameters\n                if (!sanitizedCronName) {\n                    return res.status(400).json({\n                        error: \"cronName parameter is required for cron setup\"\n                    });\n                }\n                if (!sanitizedCronSchedule) {\n                    return res.status(400).json({\n                        error: \"cronSchedule parameter is required for cron setup\"\n                    });\n                }\n                // Build the cron command - this will create a task that properly exits when done\n                const cronCommand = `node scripts/scrapeIpos.js --year ${sanitizedYear} --threads ${sanitizedThreads} ${sanitizedOverwrite ? \"--overwrite true\" : \"\"} --mongo; exit 0`;\n                command = `node scripts/cronManager.js add \"${sanitizedCronName}\" \"${sanitizedCronSchedule}\" \"${cronCommand}\" ${sanitizedYear} ${cronEnabled ? \"true\" : \"false\"}`;\n                operationName = \"Setup Cron Job\";\n                break;\n            case \"list-crons\":\n                command = `node scripts/cronManager.js list`;\n                operationName = \"List Cron Jobs\";\n                break;\n            case \"remove-cron\":\n                if (!sanitizedCronName) {\n                    return res.status(400).json({\n                        error: \"cronName parameter is required to remove a cron job\"\n                    });\n                }\n                command = `node scripts/cronManager.js remove \"${sanitizedCronName}\"`;\n                operationName = \"Remove Cron Job\";\n                break;\n            case \"start-crons\":\n                command = `node scripts/cronManager.js start`;\n                operationName = \"Start Cron Jobs\";\n                break;\n            case \"stop-crons\":\n                command = `node scripts/cronManager.js stop`;\n                operationName = \"Stop Cron Jobs\";\n                break;\n            default:\n                return res.status(400).json({\n                    error: 'Invalid operation. Use \"scrape\", \"upload\", \"scrape-and-upload\", \"setup-cron\", \"list-crons\", \"remove-cron\", \"start-crons\", or \"stop-crons\"'\n                });\n        }\n        // Generate operation ID\n        const operationId = Date.now().toString();\n        // Initialize status as processing\n        (0,_operation_status__WEBPACK_IMPORTED_MODULE_2__.updateOperationStatus)(operationId, \"processing\", {\n            command,\n            operation,\n            year: operation.includes(\"cron\") ? undefined : sanitizedYear,\n            startedAt: new Date().toISOString()\n        });\n        // Add initial log entry\n        (0,_operation_logs__WEBPACK_IMPORTED_MODULE_3__.addOperationLog)(operationId, `Starting ${operationName} operation`);\n        if (operation.includes(\"cron\")) {\n            if (sanitizedCronName) {\n                (0,_operation_logs__WEBPACK_IMPORTED_MODULE_3__.addOperationLog)(operationId, `Cron job: ${sanitizedCronName}`);\n            }\n            if (sanitizedCronSchedule) {\n                (0,_operation_logs__WEBPACK_IMPORTED_MODULE_3__.addOperationLog)(operationId, `Schedule: ${sanitizedCronSchedule}`);\n            }\n        } else {\n            (0,_operation_logs__WEBPACK_IMPORTED_MODULE_3__.addOperationLog)(operationId, `Year: ${sanitizedYear}`);\n        }\n        (0,_operation_logs__WEBPACK_IMPORTED_MODULE_3__.addOperationLog)(operationId, `Executing command: ${command}`);\n        // Execute the command\n        console.log(`Executing operation ${operationId}: ${command}`);\n        // Start the process and capture output in real-time\n        const childProcess = (0,child_process__WEBPACK_IMPORTED_MODULE_0__.exec)(command);\n        // Capture stdout in real-time\n        childProcess.stdout.on(\"data\", (data)=>{\n            const lines = data.toString().trim().split(\"\\n\");\n            lines.forEach((line)=>{\n                if (line.trim()) {\n                    console.log(`[${operationId}] ${line}`);\n                    (0,_operation_logs__WEBPACK_IMPORTED_MODULE_3__.addOperationLog)(operationId, line);\n                }\n            });\n        });\n        // Capture stderr in real-time\n        childProcess.stderr.on(\"data\", (data)=>{\n            const lines = data.toString().trim().split(\"\\n\");\n            lines.forEach((line)=>{\n                if (line.trim()) {\n                    console.error(`[${operationId}] Error: ${line}`);\n                    (0,_operation_logs__WEBPACK_IMPORTED_MODULE_3__.addOperationLog)(operationId, `Error: ${line}`);\n                }\n            });\n        });\n        // Handle process completion\n        childProcess.on(\"exit\", (code)=>{\n            const status = code === 0 ? \"completed\" : \"failed\";\n            const message = code === 0 ? `Operation completed successfully with exit code ${code}` : `Operation failed with exit code ${code}`;\n            console.log(`[${operationId}] ${message}`);\n            (0,_operation_logs__WEBPACK_IMPORTED_MODULE_3__.addOperationLog)(operationId, message);\n            (0,_operation_status__WEBPACK_IMPORTED_MODULE_2__.updateOperationStatus)(operationId, status, {\n                exitCode: code,\n                completedAt: new Date().toISOString()\n            });\n        });\n        // Handle process errors\n        childProcess.on(\"error\", (error)=>{\n            console.error(`[${operationId}] Process error:`, error);\n            (0,_operation_logs__WEBPACK_IMPORTED_MODULE_3__.addOperationLog)(operationId, `Process error: ${error.message}`);\n            (0,_operation_status__WEBPACK_IMPORTED_MODULE_2__.updateOperationStatus)(operationId, \"failed\", {\n                error: error.message,\n                completedAt: new Date().toISOString()\n            });\n        });\n        // Return immediately with operation ID and endpoints for status and logs\n        return res.status(202).json({\n            message: `${operationName} operation${operation.includes(\"cron\") ? \"\" : ` for year ${sanitizedYear}`} started successfully`,\n            operationId,\n            operation,\n            ...operation.includes(\"cron\") ? {\n                cronName: sanitizedCronName,\n                cronSchedule: sanitizedCronSchedule\n            } : {\n                year: sanitizedYear\n            },\n            status: \"processing\",\n            statusEndpoint: `/api/admin/operation-status?operationId=${operationId}`,\n            logsEndpoint: `/api/admin/operation-logs?operationId=${operationId}`\n        });\n    } catch (error) {\n        console.error(\"Admin operation error:\", error);\n        return res.status(500).json({\n            error: \"Failed to execute operation\",\n            details: error.message\n        });\n    }\n}\n// Export with authentication middleware\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((req, res)=>authenticate(req, res, handler));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvYWRtaW4vZGF0YS1vcGVyYXRpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBcUM7QUFDSjtBQUMwQjtBQUNSO0FBRW5ELGdDQUFnQztBQUNoQyxNQUFNSSxZQUFZSCwrQ0FBU0EsQ0FBQ0QsK0NBQUlBO0FBRWhDLDRCQUE0QjtBQUM1QixNQUFNSyxlQUFlLENBQUNDLEtBQUtDLEtBQUtDO0lBQzlCLE1BQU1DLFlBQVlILElBQUlJLE9BQU8sQ0FBQ0MsYUFBYSxFQUFFQyxNQUFNLElBQUksQ0FBQyxFQUFFO0lBQzFELE1BQU1DLGFBQWFDLFFBQVFDLEdBQUcsQ0FBQ0MsZUFBZTtJQUU5QyxJQUFJLENBQUNQLGFBQWFBLGNBQWNJLFlBQVk7UUFDMUMsT0FBT04sSUFBSVUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUFFQyxPQUFPO1FBQXlDO0lBQ2hGO0lBRUEsT0FBT1gsUUFBUUYsS0FBS0M7QUFDdEI7QUFFQSxvQ0FBb0M7QUFDcEMsZUFBZUMsUUFBUUYsR0FBRyxFQUFFQyxHQUFHO0lBQzdCLDJCQUEyQjtJQUMzQixJQUFJRCxJQUFJYyxNQUFNLEtBQUssUUFBUTtRQUN6QixPQUFPYixJQUFJVSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLE9BQU87UUFBcUI7SUFDNUQ7SUFFQSxJQUFJO1FBQ0YsTUFBTSxFQUNKRSxTQUFTLEVBQ1RDLElBQUksRUFDSkMsVUFBVSxDQUFDLEVBQ1hDLFlBQVksS0FBSyxFQUNqQkMsUUFBUSxFQUNSQyxZQUFZLEVBQ1pDLGNBQWMsSUFBSSxFQUNuQixHQUFHckIsSUFBSXNCLElBQUk7UUFFWixJQUFJLENBQUNQLFdBQVc7WUFDZCxPQUFPZCxJQUFJVSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUFFQyxPQUFPO1lBQWtDO1FBQ3pFO1FBRUEsMERBQTBEO1FBQzFELElBQUlFLGNBQWMsZ0JBQWdCQSxjQUFjLGdCQUFnQkEsY0FBYyxlQUFlO1lBQzNGLElBQUksQ0FBQ0MsUUFBUU8sTUFBTUMsU0FBU1IsUUFBUTtnQkFDbEMsT0FBT2YsSUFBSVUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztvQkFBRUMsT0FBTztnQkFBbUM7WUFDMUU7UUFDRjtRQUVBLCtDQUErQztRQUMvQyxNQUFNWSxnQkFBZ0JELFNBQVNSLFFBQVEsSUFBSVUsT0FBT0MsV0FBVyxJQUFJO1FBQ2pFLE1BQU1DLG1CQUFtQkosU0FBU1AsU0FBUztRQUMzQyxNQUFNWSxxQkFBcUJYLGNBQWM7UUFFekMsbUNBQW1DO1FBQ25DLElBQUlZLG9CQUFvQjtRQUN4QixJQUFJQyx3QkFBd0I7UUFFNUIsSUFBSVosVUFBVTtZQUNaLGlFQUFpRTtZQUNqRVcsb0JBQW9CWCxTQUFTYSxPQUFPLENBQUMsbUJBQW1CO1lBQ3hELElBQUlGLHNCQUFzQlgsVUFBVTtnQkFDbEMsT0FBT2xCLElBQUlVLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7b0JBQUVDLE9BQU87Z0JBQThGO1lBQ3JJO1FBQ0Y7UUFFQSxJQUFJTyxjQUFjO1lBQ2hCLDRDQUE0QztZQUM1QyxNQUFNYSxZQUFZO1lBQ2xCLElBQUksQ0FBQ0EsVUFBVUMsSUFBSSxDQUFDZCxlQUFlO2dCQUNqQyxPQUFPbkIsSUFBSVUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztvQkFBRUMsT0FBTztnQkFBbUc7WUFDMUk7WUFDQWtCLHdCQUF3Qlg7UUFDMUI7UUFFQSxJQUFJZTtRQUNKLElBQUlDO1FBRUosT0FBUXJCO1lBQ04sS0FBSztnQkFDSG9CLFVBQVUsQ0FBQyxrQ0FBa0MsRUFBRVYsY0FBYyxjQUFjLEVBQUVBLGNBQWMsWUFBWSxFQUFFQSxjQUFjLFdBQVcsRUFBRUcsaUJBQWlCLENBQUMsRUFBRUMscUJBQXFCLHFCQUFxQixHQUFHLENBQUM7Z0JBQ3RNTyxnQkFBZ0I7Z0JBQ2hCO1lBRUYsS0FBSztnQkFDSEQsVUFBVSxDQUFDLHFDQUFxQyxFQUFFVixjQUFjLGNBQWMsRUFBRUEsY0FBYyxZQUFZLEVBQUVBLGNBQWMsQ0FBQztnQkFDM0hXLGdCQUFnQjtnQkFDaEI7WUFFRixLQUFLO2dCQUNIRCxVQUFVLENBQUMsa0NBQWtDLEVBQUVWLGNBQWMsY0FBYyxFQUFFQSxjQUFjLFlBQVksRUFBRUEsY0FBYyxXQUFXLEVBQUVHLGlCQUFpQixDQUFDLEVBQUVDLHFCQUFxQixxQkFBcUIsR0FBRyx5Q0FBeUMsRUFBRUosY0FBYyxjQUFjLEVBQUVBLGNBQWMsWUFBWSxFQUFFQSxjQUFjLENBQUM7Z0JBQ3pUVyxnQkFBZ0I7Z0JBQ2hCO1lBRUYsS0FBSztnQkFDSCxvQ0FBb0M7Z0JBQ3BDLElBQUksQ0FBQ04sbUJBQW1CO29CQUN0QixPQUFPN0IsSUFBSVUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQzt3QkFBRUMsT0FBTztvQkFBZ0Q7Z0JBQ3ZGO2dCQUNBLElBQUksQ0FBQ2tCLHVCQUF1QjtvQkFDMUIsT0FBTzlCLElBQUlVLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7d0JBQUVDLE9BQU87b0JBQW9EO2dCQUMzRjtnQkFFQSxpRkFBaUY7Z0JBQ2pGLE1BQU13QixjQUFjLENBQUMsa0NBQWtDLEVBQUVaLGNBQWMsV0FBVyxFQUFFRyxpQkFBaUIsQ0FBQyxFQUFFQyxxQkFBcUIscUJBQXFCLEdBQUcsZ0JBQWdCLENBQUM7Z0JBRXRLTSxVQUFVLENBQUMsaUNBQWlDLEVBQUVMLGtCQUFrQixHQUFHLEVBQUVDLHNCQUFzQixHQUFHLEVBQUVNLFlBQVksRUFBRSxFQUFFWixjQUFjLENBQUMsRUFBRUosY0FBYyxTQUFTLFFBQVEsQ0FBQztnQkFDaktlLGdCQUFnQjtnQkFDaEI7WUFFRixLQUFLO2dCQUNIRCxVQUFVLENBQUMsZ0NBQWdDLENBQUM7Z0JBQzVDQyxnQkFBZ0I7Z0JBQ2hCO1lBRUYsS0FBSztnQkFDSCxJQUFJLENBQUNOLG1CQUFtQjtvQkFDdEIsT0FBTzdCLElBQUlVLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7d0JBQUVDLE9BQU87b0JBQXNEO2dCQUM3RjtnQkFDQXNCLFVBQVUsQ0FBQyxvQ0FBb0MsRUFBRUwsa0JBQWtCLENBQUMsQ0FBQztnQkFDckVNLGdCQUFnQjtnQkFDaEI7WUFFRixLQUFLO2dCQUNIRCxVQUFVLENBQUMsaUNBQWlDLENBQUM7Z0JBQzdDQyxnQkFBZ0I7Z0JBQ2hCO1lBRUYsS0FBSztnQkFDSEQsVUFBVSxDQUFDLGdDQUFnQyxDQUFDO2dCQUM1Q0MsZ0JBQWdCO2dCQUNoQjtZQUVGO2dCQUNFLE9BQU9uQyxJQUFJVSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO29CQUFFQyxPQUFPO2dCQUE0STtRQUNyTDtRQUVBLHdCQUF3QjtRQUN4QixNQUFNeUIsY0FBY1osS0FBS2EsR0FBRyxHQUFHQyxRQUFRO1FBRXZDLGtDQUFrQztRQUNsQzVDLHdFQUFxQkEsQ0FBQzBDLGFBQWEsY0FBYztZQUMvQ0g7WUFDQXBCO1lBQ0FDLE1BQU1ELFVBQVUwQixRQUFRLENBQUMsVUFBVUMsWUFBWWpCO1lBQy9Da0IsV0FBVyxJQUFJakIsT0FBT2tCLFdBQVc7UUFDbkM7UUFFQSx3QkFBd0I7UUFDeEIvQyxnRUFBZUEsQ0FBQ3lDLGFBQWEsQ0FBQyxTQUFTLEVBQUVGLGNBQWMsVUFBVSxDQUFDO1FBQ2xFLElBQUlyQixVQUFVMEIsUUFBUSxDQUFDLFNBQVM7WUFDOUIsSUFBSVgsbUJBQW1CO2dCQUNyQmpDLGdFQUFlQSxDQUFDeUMsYUFBYSxDQUFDLFVBQVUsRUFBRVIsa0JBQWtCLENBQUM7WUFDL0Q7WUFDQSxJQUFJQyx1QkFBdUI7Z0JBQ3pCbEMsZ0VBQWVBLENBQUN5QyxhQUFhLENBQUMsVUFBVSxFQUFFUCxzQkFBc0IsQ0FBQztZQUNuRTtRQUNGLE9BQU87WUFDTGxDLGdFQUFlQSxDQUFDeUMsYUFBYSxDQUFDLE1BQU0sRUFBRWIsY0FBYyxDQUFDO1FBQ3ZEO1FBQ0E1QixnRUFBZUEsQ0FBQ3lDLGFBQWEsQ0FBQyxtQkFBbUIsRUFBRUgsUUFBUSxDQUFDO1FBRTVELHNCQUFzQjtRQUN0QlUsUUFBUUMsR0FBRyxDQUFDLENBQUMsb0JBQW9CLEVBQUVSLFlBQVksRUFBRSxFQUFFSCxRQUFRLENBQUM7UUFFNUQsb0RBQW9EO1FBQ3BELE1BQU1ZLGVBQWVyRCxtREFBSUEsQ0FBQ3lDO1FBRTFCLDhCQUE4QjtRQUM5QlksYUFBYUMsTUFBTSxDQUFDQyxFQUFFLENBQUMsUUFBUSxDQUFDQztZQUM5QixNQUFNQyxRQUFRRCxLQUFLVixRQUFRLEdBQUdZLElBQUksR0FBRzlDLEtBQUssQ0FBQztZQUMzQzZDLE1BQU1FLE9BQU8sQ0FBQ0MsQ0FBQUE7Z0JBQ1osSUFBSUEsS0FBS0YsSUFBSSxJQUFJO29CQUNmUCxRQUFRQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUVSLFlBQVksRUFBRSxFQUFFZ0IsS0FBSyxDQUFDO29CQUN0Q3pELGdFQUFlQSxDQUFDeUMsYUFBYWdCO2dCQUMvQjtZQUNGO1FBQ0Y7UUFFQSw4QkFBOEI7UUFDOUJQLGFBQWFRLE1BQU0sQ0FBQ04sRUFBRSxDQUFDLFFBQVEsQ0FBQ0M7WUFDOUIsTUFBTUMsUUFBUUQsS0FBS1YsUUFBUSxHQUFHWSxJQUFJLEdBQUc5QyxLQUFLLENBQUM7WUFDM0M2QyxNQUFNRSxPQUFPLENBQUNDLENBQUFBO2dCQUNaLElBQUlBLEtBQUtGLElBQUksSUFBSTtvQkFDZlAsUUFBUWhDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRXlCLFlBQVksU0FBUyxFQUFFZ0IsS0FBSyxDQUFDO29CQUMvQ3pELGdFQUFlQSxDQUFDeUMsYUFBYSxDQUFDLE9BQU8sRUFBRWdCLEtBQUssQ0FBQztnQkFDL0M7WUFDRjtRQUNGO1FBRUEsNEJBQTRCO1FBQzVCUCxhQUFhRSxFQUFFLENBQUMsUUFBUSxDQUFDTztZQUN2QixNQUFNN0MsU0FBUzZDLFNBQVMsSUFBSSxjQUFjO1lBQzFDLE1BQU1DLFVBQVVELFNBQVMsSUFDckIsQ0FBQyxnREFBZ0QsRUFBRUEsS0FBSyxDQUFDLEdBQ3pELENBQUMsZ0NBQWdDLEVBQUVBLEtBQUssQ0FBQztZQUU3Q1gsUUFBUUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFUixZQUFZLEVBQUUsRUFBRW1CLFFBQVEsQ0FBQztZQUN6QzVELGdFQUFlQSxDQUFDeUMsYUFBYW1CO1lBRTdCN0Qsd0VBQXFCQSxDQUFDMEMsYUFBYTNCLFFBQVE7Z0JBQ3pDK0MsVUFBVUY7Z0JBQ1ZHLGFBQWEsSUFBSWpDLE9BQU9rQixXQUFXO1lBQ3JDO1FBQ0Y7UUFFQSx3QkFBd0I7UUFDeEJHLGFBQWFFLEVBQUUsQ0FBQyxTQUFTLENBQUNwQztZQUN4QmdDLFFBQVFoQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUV5QixZQUFZLGdCQUFnQixDQUFDLEVBQUV6QjtZQUNqRGhCLGdFQUFlQSxDQUFDeUMsYUFBYSxDQUFDLGVBQWUsRUFBRXpCLE1BQU00QyxPQUFPLENBQUMsQ0FBQztZQUU5RDdELHdFQUFxQkEsQ0FBQzBDLGFBQWEsVUFBVTtnQkFDM0N6QixPQUFPQSxNQUFNNEMsT0FBTztnQkFDcEJFLGFBQWEsSUFBSWpDLE9BQU9rQixXQUFXO1lBQ3JDO1FBQ0Y7UUFFQSx5RUFBeUU7UUFDekUsT0FBTzNDLElBQUlVLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFDMUI2QyxTQUFTLENBQUMsRUFBRXJCLGNBQWMsVUFBVSxFQUFFckIsVUFBVTBCLFFBQVEsQ0FBQyxVQUFVLEtBQUssQ0FBQyxVQUFVLEVBQUVoQixjQUFjLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQztZQUMzSGE7WUFDQXZCO1lBQ0EsR0FBSUEsVUFBVTBCLFFBQVEsQ0FBQyxVQUFVO2dCQUFFdEIsVUFBVVc7Z0JBQW1CVixjQUFjVztZQUFzQixJQUFJO2dCQUFFZixNQUFNUztZQUFjLENBQUM7WUFDL0hkLFFBQVE7WUFDUmlELGdCQUFnQixDQUFDLHdDQUF3QyxFQUFFdEIsWUFBWSxDQUFDO1lBQ3hFdUIsY0FBYyxDQUFDLHNDQUFzQyxFQUFFdkIsWUFBWSxDQUFDO1FBQ3RFO0lBRUYsRUFBRSxPQUFPekIsT0FBTztRQUNkZ0MsUUFBUWhDLEtBQUssQ0FBQywwQkFBMEJBO1FBQ3hDLE9BQU9aLElBQUlVLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRUMsT0FBTztZQUErQmlELFNBQVNqRCxNQUFNNEMsT0FBTztRQUFDO0lBQzdGO0FBQ0Y7QUFFQSx3Q0FBd0M7QUFDeEMsaUVBQWUsQ0FBQ3pELEtBQUtDLE1BQVFGLGFBQWFDLEtBQUtDLEtBQUtDLFFBQU8sRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2lwby1zY3JhcGVyLy4vcGFnZXMvYXBpL2FkbWluL2RhdGEtb3BlcmF0aW9ucy5qcz9mZDE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV4ZWMgfSBmcm9tICdjaGlsZF9wcm9jZXNzJztcbmltcG9ydCB7IHByb21pc2lmeSB9IGZyb20gJ3V0aWwnO1xuaW1wb3J0IHsgdXBkYXRlT3BlcmF0aW9uU3RhdHVzIH0gZnJvbSAnLi9vcGVyYXRpb24tc3RhdHVzJztcbmltcG9ydCB7IGFkZE9wZXJhdGlvbkxvZyB9IGZyb20gJy4vb3BlcmF0aW9uLWxvZ3MnO1xuXG4vLyBDb252ZXJ0IGV4ZWMgdG8gcHJvbWlzZS1iYXNlZFxuY29uc3QgZXhlY0FzeW5jID0gcHJvbWlzaWZ5KGV4ZWMpO1xuXG4vLyBBdXRoZW50aWNhdGlvbiBtaWRkbGV3YXJlXG5jb25zdCBhdXRoZW50aWNhdGUgPSAocmVxLCByZXMsIGhhbmRsZXIpID0+IHtcbiAgY29uc3QgYXV0aFRva2VuID0gcmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbj8uc3BsaXQoJyAnKVsxXTtcbiAgY29uc3QgdmFsaWRUb2tlbiA9IHByb2Nlc3MuZW52LkFETUlOX0FQSV9UT0tFTjtcblxuICBpZiAoIWF1dGhUb2tlbiB8fCBhdXRoVG9rZW4gIT09IHZhbGlkVG9rZW4pIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBlcnJvcjogJ1VuYXV0aG9yaXplZDogSW52YWxpZCBvciBtaXNzaW5nIHRva2VuJyB9KTtcbiAgfVxuXG4gIHJldHVybiBoYW5kbGVyKHJlcSwgcmVzKTtcbn07XG5cbi8vIE1haW4gaGFuZGxlciBmb3IgYWRtaW4gb3BlcmF0aW9uc1xuYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuICAvLyBPbmx5IGFsbG93IFBPU1QgcmVxdWVzdHNcbiAgaWYgKHJlcS5tZXRob2QgIT09ICdQT1NUJykge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7IGVycm9yOiAnTWV0aG9kIG5vdCBhbGxvd2VkJyB9KTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgeyBcbiAgICAgIG9wZXJhdGlvbiwgXG4gICAgICB5ZWFyLCBcbiAgICAgIHRocmVhZHMgPSA1LCBcbiAgICAgIG92ZXJ3cml0ZSA9IGZhbHNlLFxuICAgICAgY3Jvbk5hbWUsXG4gICAgICBjcm9uU2NoZWR1bGUsXG4gICAgICBjcm9uRW5hYmxlZCA9IHRydWVcbiAgICB9ID0gcmVxLmJvZHk7XG5cbiAgICBpZiAoIW9wZXJhdGlvbikge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6ICdPcGVyYXRpb24gcGFyYW1ldGVyIGlzIHJlcXVpcmVkJyB9KTtcbiAgICB9XG5cbiAgICAvLyBWYWxpZGF0ZSB5ZWFyIGZvciBhbGwgb3BlcmF0aW9ucyBleGNlcHQgY3JvbiBtYW5hZ2VtZW50XG4gICAgaWYgKG9wZXJhdGlvbiAhPT0gJ3NldHVwLWNyb24nICYmIG9wZXJhdGlvbiAhPT0gJ2xpc3QtY3JvbnMnICYmIG9wZXJhdGlvbiAhPT0gJ3JlbW92ZS1jcm9uJykge1xuICAgICAgaWYgKCF5ZWFyIHx8IGlzTmFOKHBhcnNlSW50KHllYXIpKSkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ1ZhbGlkIHllYXIgcGFyYW1ldGVyIGlzIHJlcXVpcmVkJyB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBTYW5pdGl6ZSBpbnB1dHMgdG8gcHJldmVudCBjb21tYW5kIGluamVjdGlvblxuICAgIGNvbnN0IHNhbml0aXplZFllYXIgPSBwYXJzZUludCh5ZWFyIHx8IG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKSwgMTApO1xuICAgIGNvbnN0IHNhbml0aXplZFRocmVhZHMgPSBwYXJzZUludCh0aHJlYWRzLCAxMCk7XG4gICAgY29uc3Qgc2FuaXRpemVkT3ZlcndyaXRlID0gb3ZlcndyaXRlID09PSB0cnVlO1xuICAgIFxuICAgIC8vIFNhbml0aXplIGNyb24gaW5wdXRzIGlmIHByb3ZpZGVkXG4gICAgbGV0IHNhbml0aXplZENyb25OYW1lID0gJyc7XG4gICAgbGV0IHNhbml0aXplZENyb25TY2hlZHVsZSA9ICcnO1xuICAgIFxuICAgIGlmIChjcm9uTmFtZSkge1xuICAgICAgLy8gUmVtb3ZlIGFueSBjaGFyYWN0ZXJzIHRoYXQgY291bGQgYmUgdXNlZCBmb3IgY29tbWFuZCBpbmplY3Rpb25cbiAgICAgIHNhbml0aXplZENyb25OYW1lID0gY3Jvbk5hbWUucmVwbGFjZSgvW15hLXpBLVowLTlfLV0vZywgJycpO1xuICAgICAgaWYgKHNhbml0aXplZENyb25OYW1lICE9PSBjcm9uTmFtZSkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ0Nyb24gbmFtZSBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcnMuIFVzZSBvbmx5IGxldHRlcnMsIG51bWJlcnMsIGh5cGhlbnMsIGFuZCB1bmRlcnNjb3Jlcy4nIH0pO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBpZiAoY3JvblNjaGVkdWxlKSB7XG4gICAgICAvLyBCYXNpYyB2YWxpZGF0aW9uIGZvciBjcm9uIHNjaGVkdWxlIGZvcm1hdFxuICAgICAgY29uc3QgY3JvblJlZ2V4ID0gL14oXFwqfChbMC05XXwxWzAtOV18MlswLTldfDNbMC05XXw0WzAtOV18NVswLTldKXxcXCpcXC8oWzAtOV18MVswLTldfDJbMC05XXwzWzAtOV18NFswLTldfDVbMC05XSkpIChcXCp8KFswLTldfDFbMC05XXwyWzAtM10pfFxcKlxcLyhbMC05XXwxWzAtOV18MlswLTNdKSkgKFxcKnwoWzEtOV18MVswLTldfDJbMC05XXwzWzAtMV0pfFxcKlxcLyhbMS05XXwxWzAtOV18MlswLTldfDNbMC0xXSkpIChcXCp8KFsxLTldfDFbMC0yXSl8XFwqXFwvKFsxLTldfDFbMC0yXSkpIChcXCp8KFswLTZdKXxcXCpcXC8oWzAtNl0pKSQvO1xuICAgICAgaWYgKCFjcm9uUmVnZXgudGVzdChjcm9uU2NoZWR1bGUpKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnSW52YWxpZCBjcm9uIHNjaGVkdWxlIGZvcm1hdC4gVXNlIHN0YW5kYXJkIGNyb24gc3ludGF4IChlLmcuLCBcIjAgMCAqICogKlwiIGZvciBkYWlseSBhdCBtaWRuaWdodCknIH0pO1xuICAgICAgfVxuICAgICAgc2FuaXRpemVkQ3JvblNjaGVkdWxlID0gY3JvblNjaGVkdWxlO1xuICAgIH1cblxuICAgIGxldCBjb21tYW5kO1xuICAgIGxldCBvcGVyYXRpb25OYW1lO1xuXG4gICAgc3dpdGNoIChvcGVyYXRpb24pIHtcbiAgICAgIGNhc2UgJ3NjcmFwZSc6XG4gICAgICAgIGNvbW1hbmQgPSBgbm9kZSBzY3JpcHRzL3NjcmFwZUlwb3MuanMgLS15ZWFyICR7c2FuaXRpemVkWWVhcn0gLS1zdGFydC15ZWFyICR7c2FuaXRpemVkWWVhcn0gLS1lbmQteWVhciAke3Nhbml0aXplZFllYXJ9IC0tdGhyZWFkcyAke3Nhbml0aXplZFRocmVhZHN9ICR7c2FuaXRpemVkT3ZlcndyaXRlID8gJy0tb3ZlcndyaXRlIHRydWUnIDogJyd9YDtcbiAgICAgICAgb3BlcmF0aW9uTmFtZSA9ICdTY3JhcGUnO1xuICAgICAgICBicmVhaztcbiAgICAgICAgXG4gICAgICBjYXNlICd1cGxvYWQnOlxuICAgICAgICBjb21tYW5kID0gYG5vZGUgc2NyaXB0cy91cGxvYWRUb01vbmdvLmpzIC0teWVhciAke3Nhbml0aXplZFllYXJ9IC0tc3RhcnQteWVhciAke3Nhbml0aXplZFllYXJ9IC0tZW5kLXllYXIgJHtzYW5pdGl6ZWRZZWFyfWA7XG4gICAgICAgIG9wZXJhdGlvbk5hbWUgPSAnVXBsb2FkJztcbiAgICAgICAgYnJlYWs7XG4gICAgICAgIFxuICAgICAgY2FzZSAnc2NyYXBlLWFuZC11cGxvYWQnOlxuICAgICAgICBjb21tYW5kID0gYG5vZGUgc2NyaXB0cy9zY3JhcGVJcG9zLmpzIC0teWVhciAke3Nhbml0aXplZFllYXJ9IC0tc3RhcnQteWVhciAke3Nhbml0aXplZFllYXJ9IC0tZW5kLXllYXIgJHtzYW5pdGl6ZWRZZWFyfSAtLXRocmVhZHMgJHtzYW5pdGl6ZWRUaHJlYWRzfSAke3Nhbml0aXplZE92ZXJ3cml0ZSA/ICctLW92ZXJ3cml0ZSB0cnVlJyA6ICcnfSAmJiBub2RlIHNjcmlwdHMvdXBsb2FkVG9Nb25nby5qcyAtLXllYXIgJHtzYW5pdGl6ZWRZZWFyfSAtLXN0YXJ0LXllYXIgJHtzYW5pdGl6ZWRZZWFyfSAtLWVuZC15ZWFyICR7c2FuaXRpemVkWWVhcn1gO1xuICAgICAgICBvcGVyYXRpb25OYW1lID0gJ1NjcmFwZSBhbmQgVXBsb2FkJztcbiAgICAgICAgYnJlYWs7XG4gICAgICAgIFxuICAgICAgY2FzZSAnc2V0dXAtY3Jvbic6XG4gICAgICAgIC8vIFZhbGlkYXRlIHJlcXVpcmVkIGNyb24gcGFyYW1ldGVyc1xuICAgICAgICBpZiAoIXNhbml0aXplZENyb25OYW1lKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6ICdjcm9uTmFtZSBwYXJhbWV0ZXIgaXMgcmVxdWlyZWQgZm9yIGNyb24gc2V0dXAnIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmICghc2FuaXRpemVkQ3JvblNjaGVkdWxlKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6ICdjcm9uU2NoZWR1bGUgcGFyYW1ldGVyIGlzIHJlcXVpcmVkIGZvciBjcm9uIHNldHVwJyB9KTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gQnVpbGQgdGhlIGNyb24gY29tbWFuZCAtIHRoaXMgd2lsbCBjcmVhdGUgYSB0YXNrIHRoYXQgcHJvcGVybHkgZXhpdHMgd2hlbiBkb25lXG4gICAgICAgIGNvbnN0IGNyb25Db21tYW5kID0gYG5vZGUgc2NyaXB0cy9zY3JhcGVJcG9zLmpzIC0teWVhciAke3Nhbml0aXplZFllYXJ9IC0tdGhyZWFkcyAke3Nhbml0aXplZFRocmVhZHN9ICR7c2FuaXRpemVkT3ZlcndyaXRlID8gJy0tb3ZlcndyaXRlIHRydWUnIDogJyd9IC0tbW9uZ287IGV4aXQgMGA7XG4gICAgICAgIFxuICAgICAgICBjb21tYW5kID0gYG5vZGUgc2NyaXB0cy9jcm9uTWFuYWdlci5qcyBhZGQgXCIke3Nhbml0aXplZENyb25OYW1lfVwiIFwiJHtzYW5pdGl6ZWRDcm9uU2NoZWR1bGV9XCIgXCIke2Nyb25Db21tYW5kfVwiICR7c2FuaXRpemVkWWVhcn0gJHtjcm9uRW5hYmxlZCA/ICd0cnVlJyA6ICdmYWxzZSd9YDtcbiAgICAgICAgb3BlcmF0aW9uTmFtZSA9ICdTZXR1cCBDcm9uIEpvYic7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdsaXN0LWNyb25zJzpcbiAgICAgICAgY29tbWFuZCA9IGBub2RlIHNjcmlwdHMvY3Jvbk1hbmFnZXIuanMgbGlzdGA7XG4gICAgICAgIG9wZXJhdGlvbk5hbWUgPSAnTGlzdCBDcm9uIEpvYnMnO1xuICAgICAgICBicmVhaztcbiAgICAgICAgXG4gICAgICBjYXNlICdyZW1vdmUtY3Jvbic6XG4gICAgICAgIGlmICghc2FuaXRpemVkQ3Jvbk5hbWUpIHtcbiAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ2Nyb25OYW1lIHBhcmFtZXRlciBpcyByZXF1aXJlZCB0byByZW1vdmUgYSBjcm9uIGpvYicgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY29tbWFuZCA9IGBub2RlIHNjcmlwdHMvY3Jvbk1hbmFnZXIuanMgcmVtb3ZlIFwiJHtzYW5pdGl6ZWRDcm9uTmFtZX1cImA7XG4gICAgICAgIG9wZXJhdGlvbk5hbWUgPSAnUmVtb3ZlIENyb24gSm9iJztcbiAgICAgICAgYnJlYWs7XG4gICAgICAgIFxuICAgICAgY2FzZSAnc3RhcnQtY3JvbnMnOlxuICAgICAgICBjb21tYW5kID0gYG5vZGUgc2NyaXB0cy9jcm9uTWFuYWdlci5qcyBzdGFydGA7XG4gICAgICAgIG9wZXJhdGlvbk5hbWUgPSAnU3RhcnQgQ3JvbiBKb2JzJztcbiAgICAgICAgYnJlYWs7XG4gICAgICAgIFxuICAgICAgY2FzZSAnc3RvcC1jcm9ucyc6XG4gICAgICAgIGNvbW1hbmQgPSBgbm9kZSBzY3JpcHRzL2Nyb25NYW5hZ2VyLmpzIHN0b3BgO1xuICAgICAgICBvcGVyYXRpb25OYW1lID0gJ1N0b3AgQ3JvbiBKb2JzJztcbiAgICAgICAgYnJlYWs7XG4gICAgICAgIFxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6ICdJbnZhbGlkIG9wZXJhdGlvbi4gVXNlIFwic2NyYXBlXCIsIFwidXBsb2FkXCIsIFwic2NyYXBlLWFuZC11cGxvYWRcIiwgXCJzZXR1cC1jcm9uXCIsIFwibGlzdC1jcm9uc1wiLCBcInJlbW92ZS1jcm9uXCIsIFwic3RhcnQtY3JvbnNcIiwgb3IgXCJzdG9wLWNyb25zXCInIH0pO1xuICAgIH1cblxuICAgIC8vIEdlbmVyYXRlIG9wZXJhdGlvbiBJRFxuICAgIGNvbnN0IG9wZXJhdGlvbklkID0gRGF0ZS5ub3coKS50b1N0cmluZygpO1xuICAgIFxuICAgIC8vIEluaXRpYWxpemUgc3RhdHVzIGFzIHByb2Nlc3NpbmdcbiAgICB1cGRhdGVPcGVyYXRpb25TdGF0dXMob3BlcmF0aW9uSWQsICdwcm9jZXNzaW5nJywge1xuICAgICAgY29tbWFuZCxcbiAgICAgIG9wZXJhdGlvbixcbiAgICAgIHllYXI6IG9wZXJhdGlvbi5pbmNsdWRlcygnY3JvbicpID8gdW5kZWZpbmVkIDogc2FuaXRpemVkWWVhcixcbiAgICAgIHN0YXJ0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgfSk7XG4gICAgXG4gICAgLy8gQWRkIGluaXRpYWwgbG9nIGVudHJ5XG4gICAgYWRkT3BlcmF0aW9uTG9nKG9wZXJhdGlvbklkLCBgU3RhcnRpbmcgJHtvcGVyYXRpb25OYW1lfSBvcGVyYXRpb25gKTtcbiAgICBpZiAob3BlcmF0aW9uLmluY2x1ZGVzKCdjcm9uJykpIHtcbiAgICAgIGlmIChzYW5pdGl6ZWRDcm9uTmFtZSkge1xuICAgICAgICBhZGRPcGVyYXRpb25Mb2cob3BlcmF0aW9uSWQsIGBDcm9uIGpvYjogJHtzYW5pdGl6ZWRDcm9uTmFtZX1gKTtcbiAgICAgIH1cbiAgICAgIGlmIChzYW5pdGl6ZWRDcm9uU2NoZWR1bGUpIHtcbiAgICAgICAgYWRkT3BlcmF0aW9uTG9nKG9wZXJhdGlvbklkLCBgU2NoZWR1bGU6ICR7c2FuaXRpemVkQ3JvblNjaGVkdWxlfWApO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBhZGRPcGVyYXRpb25Mb2cob3BlcmF0aW9uSWQsIGBZZWFyOiAke3Nhbml0aXplZFllYXJ9YCk7XG4gICAgfVxuICAgIGFkZE9wZXJhdGlvbkxvZyhvcGVyYXRpb25JZCwgYEV4ZWN1dGluZyBjb21tYW5kOiAke2NvbW1hbmR9YCk7XG5cbiAgICAvLyBFeGVjdXRlIHRoZSBjb21tYW5kXG4gICAgY29uc29sZS5sb2coYEV4ZWN1dGluZyBvcGVyYXRpb24gJHtvcGVyYXRpb25JZH06ICR7Y29tbWFuZH1gKTtcbiAgICBcbiAgICAvLyBTdGFydCB0aGUgcHJvY2VzcyBhbmQgY2FwdHVyZSBvdXRwdXQgaW4gcmVhbC10aW1lXG4gICAgY29uc3QgY2hpbGRQcm9jZXNzID0gZXhlYyhjb21tYW5kKTtcbiAgICBcbiAgICAvLyBDYXB0dXJlIHN0ZG91dCBpbiByZWFsLXRpbWVcbiAgICBjaGlsZFByb2Nlc3Muc3Rkb3V0Lm9uKCdkYXRhJywgKGRhdGEpID0+IHtcbiAgICAgIGNvbnN0IGxpbmVzID0gZGF0YS50b1N0cmluZygpLnRyaW0oKS5zcGxpdCgnXFxuJyk7XG4gICAgICBsaW5lcy5mb3JFYWNoKGxpbmUgPT4ge1xuICAgICAgICBpZiAobGluZS50cmltKCkpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhgWyR7b3BlcmF0aW9uSWR9XSAke2xpbmV9YCk7XG4gICAgICAgICAgYWRkT3BlcmF0aW9uTG9nKG9wZXJhdGlvbklkLCBsaW5lKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgXG4gICAgLy8gQ2FwdHVyZSBzdGRlcnIgaW4gcmVhbC10aW1lXG4gICAgY2hpbGRQcm9jZXNzLnN0ZGVyci5vbignZGF0YScsIChkYXRhKSA9PiB7XG4gICAgICBjb25zdCBsaW5lcyA9IGRhdGEudG9TdHJpbmcoKS50cmltKCkuc3BsaXQoJ1xcbicpO1xuICAgICAgbGluZXMuZm9yRWFjaChsaW5lID0+IHtcbiAgICAgICAgaWYgKGxpbmUudHJpbSgpKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihgWyR7b3BlcmF0aW9uSWR9XSBFcnJvcjogJHtsaW5lfWApO1xuICAgICAgICAgIGFkZE9wZXJhdGlvbkxvZyhvcGVyYXRpb25JZCwgYEVycm9yOiAke2xpbmV9YCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIFxuICAgIC8vIEhhbmRsZSBwcm9jZXNzIGNvbXBsZXRpb25cbiAgICBjaGlsZFByb2Nlc3Mub24oJ2V4aXQnLCAoY29kZSkgPT4ge1xuICAgICAgY29uc3Qgc3RhdHVzID0gY29kZSA9PT0gMCA/ICdjb21wbGV0ZWQnIDogJ2ZhaWxlZCc7XG4gICAgICBjb25zdCBtZXNzYWdlID0gY29kZSA9PT0gMCBcbiAgICAgICAgPyBgT3BlcmF0aW9uIGNvbXBsZXRlZCBzdWNjZXNzZnVsbHkgd2l0aCBleGl0IGNvZGUgJHtjb2RlfWAgXG4gICAgICAgIDogYE9wZXJhdGlvbiBmYWlsZWQgd2l0aCBleGl0IGNvZGUgJHtjb2RlfWA7XG4gICAgICAgIFxuICAgICAgY29uc29sZS5sb2coYFske29wZXJhdGlvbklkfV0gJHttZXNzYWdlfWApO1xuICAgICAgYWRkT3BlcmF0aW9uTG9nKG9wZXJhdGlvbklkLCBtZXNzYWdlKTtcbiAgICAgIFxuICAgICAgdXBkYXRlT3BlcmF0aW9uU3RhdHVzKG9wZXJhdGlvbklkLCBzdGF0dXMsIHtcbiAgICAgICAgZXhpdENvZGU6IGNvZGUsXG4gICAgICAgIGNvbXBsZXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIFxuICAgIC8vIEhhbmRsZSBwcm9jZXNzIGVycm9yc1xuICAgIGNoaWxkUHJvY2Vzcy5vbignZXJyb3InLCAoZXJyb3IpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYFske29wZXJhdGlvbklkfV0gUHJvY2VzcyBlcnJvcjpgLCBlcnJvcik7XG4gICAgICBhZGRPcGVyYXRpb25Mb2cob3BlcmF0aW9uSWQsIGBQcm9jZXNzIGVycm9yOiAke2Vycm9yLm1lc3NhZ2V9YCk7XG4gICAgICBcbiAgICAgIHVwZGF0ZU9wZXJhdGlvblN0YXR1cyhvcGVyYXRpb25JZCwgJ2ZhaWxlZCcsIHtcbiAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsXG4gICAgICAgIGNvbXBsZXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgLy8gUmV0dXJuIGltbWVkaWF0ZWx5IHdpdGggb3BlcmF0aW9uIElEIGFuZCBlbmRwb2ludHMgZm9yIHN0YXR1cyBhbmQgbG9nc1xuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMikuanNvbih7IFxuICAgICAgbWVzc2FnZTogYCR7b3BlcmF0aW9uTmFtZX0gb3BlcmF0aW9uJHtvcGVyYXRpb24uaW5jbHVkZXMoJ2Nyb24nKSA/ICcnIDogYCBmb3IgeWVhciAke3Nhbml0aXplZFllYXJ9YH0gc3RhcnRlZCBzdWNjZXNzZnVsbHlgLFxuICAgICAgb3BlcmF0aW9uSWQsXG4gICAgICBvcGVyYXRpb24sXG4gICAgICAuLi4ob3BlcmF0aW9uLmluY2x1ZGVzKCdjcm9uJykgPyB7IGNyb25OYW1lOiBzYW5pdGl6ZWRDcm9uTmFtZSwgY3JvblNjaGVkdWxlOiBzYW5pdGl6ZWRDcm9uU2NoZWR1bGUgfSA6IHsgeWVhcjogc2FuaXRpemVkWWVhciB9KSxcbiAgICAgIHN0YXR1czogJ3Byb2Nlc3NpbmcnLFxuICAgICAgc3RhdHVzRW5kcG9pbnQ6IGAvYXBpL2FkbWluL29wZXJhdGlvbi1zdGF0dXM/b3BlcmF0aW9uSWQ9JHtvcGVyYXRpb25JZH1gLFxuICAgICAgbG9nc0VuZHBvaW50OiBgL2FwaS9hZG1pbi9vcGVyYXRpb24tbG9ncz9vcGVyYXRpb25JZD0ke29wZXJhdGlvbklkfWBcbiAgICB9KTtcbiAgICBcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdBZG1pbiBvcGVyYXRpb24gZXJyb3I6JywgZXJyb3IpO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiAnRmFpbGVkIHRvIGV4ZWN1dGUgb3BlcmF0aW9uJywgZGV0YWlsczogZXJyb3IubWVzc2FnZSB9KTtcbiAgfVxufVxuXG4vLyBFeHBvcnQgd2l0aCBhdXRoZW50aWNhdGlvbiBtaWRkbGV3YXJlXG5leHBvcnQgZGVmYXVsdCAocmVxLCByZXMpID0+IGF1dGhlbnRpY2F0ZShyZXEsIHJlcywgaGFuZGxlcik7ICJdLCJuYW1lcyI6WyJleGVjIiwicHJvbWlzaWZ5IiwidXBkYXRlT3BlcmF0aW9uU3RhdHVzIiwiYWRkT3BlcmF0aW9uTG9nIiwiZXhlY0FzeW5jIiwiYXV0aGVudGljYXRlIiwicmVxIiwicmVzIiwiaGFuZGxlciIsImF1dGhUb2tlbiIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwic3BsaXQiLCJ2YWxpZFRva2VuIiwicHJvY2VzcyIsImVudiIsIkFETUlOX0FQSV9UT0tFTiIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsIm1ldGhvZCIsIm9wZXJhdGlvbiIsInllYXIiLCJ0aHJlYWRzIiwib3ZlcndyaXRlIiwiY3Jvbk5hbWUiLCJjcm9uU2NoZWR1bGUiLCJjcm9uRW5hYmxlZCIsImJvZHkiLCJpc05hTiIsInBhcnNlSW50Iiwic2FuaXRpemVkWWVhciIsIkRhdGUiLCJnZXRGdWxsWWVhciIsInNhbml0aXplZFRocmVhZHMiLCJzYW5pdGl6ZWRPdmVyd3JpdGUiLCJzYW5pdGl6ZWRDcm9uTmFtZSIsInNhbml0aXplZENyb25TY2hlZHVsZSIsInJlcGxhY2UiLCJjcm9uUmVnZXgiLCJ0ZXN0IiwiY29tbWFuZCIsIm9wZXJhdGlvbk5hbWUiLCJjcm9uQ29tbWFuZCIsIm9wZXJhdGlvbklkIiwibm93IiwidG9TdHJpbmciLCJpbmNsdWRlcyIsInVuZGVmaW5lZCIsInN0YXJ0ZWRBdCIsInRvSVNPU3RyaW5nIiwiY29uc29sZSIsImxvZyIsImNoaWxkUHJvY2VzcyIsInN0ZG91dCIsIm9uIiwiZGF0YSIsImxpbmVzIiwidHJpbSIsImZvckVhY2giLCJsaW5lIiwic3RkZXJyIiwiY29kZSIsIm1lc3NhZ2UiLCJleGl0Q29kZSIsImNvbXBsZXRlZEF0Iiwic3RhdHVzRW5kcG9pbnQiLCJsb2dzRW5kcG9pbnQiLCJkZXRhaWxzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/admin/data-operations.js\n");

/***/ }),

/***/ "(api)/./pages/api/admin/operation-logs.js":
/*!*******************************************!*\
  !*** ./pages/api/admin/operation-logs.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addOperationLog: () => (/* binding */ addOperationLog),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Authentication middleware\nconst authenticate = (req, res, handler)=>{\n    const authToken = req.headers.authorization?.split(\" \")[1];\n    const validToken = process.env.ADMIN_API_TOKEN;\n    if (!authToken || authToken !== validToken) {\n        return res.status(401).json({\n            error: \"Unauthorized: Invalid or missing token\"\n        });\n    }\n    return handler(req, res);\n};\n// In-memory log storage\nconst operationLogs = new Map();\n// Add a log entry to the operation\nconst addOperationLog = (operationId, logEntry)=>{\n    if (!operationLogs.has(operationId)) {\n        operationLogs.set(operationId, []);\n    }\n    const logs = operationLogs.get(operationId);\n    const timestamp = new Date().toISOString();\n    logs.push({\n        timestamp,\n        message: logEntry\n    });\n    // Keep only the last 1000 log entries to prevent memory issues\n    if (logs.length > 1000) {\n        logs.shift(); // Remove oldest entry\n    }\n    // Clean up old logs (older than 24 hours)\n    const oneDayAgo = Date.now() - 24 * 60 * 60 * 1000;\n    for (const [id, entries] of operationLogs.entries()){\n        if (entries.length > 0) {\n            const oldestEntryTime = new Date(entries[0].timestamp).getTime();\n            if (oldestEntryTime < oneDayAgo) {\n                operationLogs.delete(id);\n            }\n        }\n    }\n};\n// Handler to get operation logs\nasync function handler(req, res) {\n    if (req.method !== \"GET\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        const { operationId, since } = req.query;\n        if (!operationId) {\n            return res.status(400).json({\n                error: \"Operation ID is required\"\n            });\n        }\n        const logs = operationLogs.get(operationId) || [];\n        // Filter logs by timestamp if 'since' is provided\n        let filteredLogs = logs;\n        if (since) {\n            try {\n                const sinceDate = new Date(since);\n                filteredLogs = logs.filter((log)=>new Date(log.timestamp) > sinceDate);\n            } catch (e) {\n                return res.status(400).json({\n                    error: 'Invalid timestamp format for \"since\" parameter'\n                });\n            }\n        }\n        return res.status(200).json({\n            operationId,\n            count: filteredLogs.length,\n            logs: filteredLogs,\n            nextPoll: filteredLogs.length > 0 ? filteredLogs[filteredLogs.length - 1].timestamp : since || new Date().toISOString()\n        });\n    } catch (error) {\n        console.error(\"Error retrieving operation logs:\", error);\n        return res.status(500).json({\n            error: \"Failed to retrieve operation logs\"\n        });\n    }\n}\n// Export with authentication middleware\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((req, res)=>authenticate(req, res, handler));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEdBQy9DZSxTQUFTLElBQUlkLE9BQU9DLFdBQVc7UUFDckM7SUFDRixFQUFFLE9BQU9aLE9BQU87UUFDZGtDLFFBQVFsQyxLQUFLLENBQUMsb0NBQW9DQTtRQUNsRCxPQUFPWixJQUFJVSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLE9BQU87UUFBb0M7SUFDM0U7QUFDRjtBQUVBLHdDQUF3QztBQUN4QyxpRUFBZSxDQUFDYixLQUFLQyxNQUFRRixhQUFhQyxLQUFLQyxLQUFLQyxRQUFPLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pcG8tc2NyYXBlci8uL3BhZ2VzL2FwaS9hZG1pbi9vcGVyYXRpb24tbG9ncy5qcz82MmVjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEF1dGhlbnRpY2F0aW9uIG1pZGRsZXdhcmVcbmNvbnN0IGF1dGhlbnRpY2F0ZSA9IChyZXEsIHJlcywgaGFuZGxlcikgPT4ge1xuICBjb25zdCBhdXRoVG9rZW4gPSByZXEuaGVhZGVycy5hdXRob3JpemF0aW9uPy5zcGxpdCgnICcpWzFdO1xuICBjb25zdCB2YWxpZFRva2VuID0gcHJvY2Vzcy5lbnYuQURNSU5fQVBJX1RPS0VOO1xuXG4gIGlmICghYXV0aFRva2VuIHx8IGF1dGhUb2tlbiAhPT0gdmFsaWRUb2tlbikge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IGVycm9yOiAnVW5hdXRob3JpemVkOiBJbnZhbGlkIG9yIG1pc3NpbmcgdG9rZW4nIH0pO1xuICB9XG5cbiAgcmV0dXJuIGhhbmRsZXIocmVxLCByZXMpO1xufTtcblxuLy8gSW4tbWVtb3J5IGxvZyBzdG9yYWdlXG5jb25zdCBvcGVyYXRpb25Mb2dzID0gbmV3IE1hcCgpO1xuXG4vLyBBZGQgYSBsb2cgZW50cnkgdG8gdGhlIG9wZXJhdGlvblxuZXhwb3J0IGNvbnN0IGFkZE9wZXJhdGlvbkxvZyA9IChvcGVyYXRpb25JZCwgbG9nRW50cnkpID0+IHtcbiAgaWYgKCFvcGVyYXRpb25Mb2dzLmhhcyhvcGVyYXRpb25JZCkpIHtcbiAgICBvcGVyYXRpb25Mb2dzLnNldChvcGVyYXRpb25JZCwgW10pO1xuICB9XG4gIFxuICBjb25zdCBsb2dzID0gb3BlcmF0aW9uTG9ncy5nZXQob3BlcmF0aW9uSWQpO1xuICBjb25zdCB0aW1lc3RhbXAgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCk7XG4gIFxuICBsb2dzLnB1c2goe1xuICAgIHRpbWVzdGFtcCxcbiAgICBtZXNzYWdlOiBsb2dFbnRyeSxcbiAgfSk7XG4gIFxuICAvLyBLZWVwIG9ubHkgdGhlIGxhc3QgMTAwMCBsb2cgZW50cmllcyB0byBwcmV2ZW50IG1lbW9yeSBpc3N1ZXNcbiAgaWYgKGxvZ3MubGVuZ3RoID4gMTAwMCkge1xuICAgIGxvZ3Muc2hpZnQoKTsgLy8gUmVtb3ZlIG9sZGVzdCBlbnRyeVxuICB9XG4gIFxuICAvLyBDbGVhbiB1cCBvbGQgbG9ncyAob2xkZXIgdGhhbiAyNCBob3VycylcbiAgY29uc3Qgb25lRGF5QWdvID0gRGF0ZS5ub3coKSAtIDI0ICogNjAgKiA2MCAqIDEwMDA7XG4gIGZvciAoY29uc3QgW2lkLCBlbnRyaWVzXSBvZiBvcGVyYXRpb25Mb2dzLmVudHJpZXMoKSkge1xuICAgIGlmIChlbnRyaWVzLmxlbmd0aCA+IDApIHtcbiAgICAgIGNvbnN0IG9sZGVzdEVudHJ5VGltZSA9IG5ldyBEYXRlKGVudHJpZXNbMF0udGltZXN0YW1wKS5nZXRUaW1lKCk7XG4gICAgICBpZiAob2xkZXN0RW50cnlUaW1lIDwgb25lRGF5QWdvKSB7XG4gICAgICAgIG9wZXJhdGlvbkxvZ3MuZGVsZXRlKGlkKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn07XG5cbi8vIEhhbmRsZXIgdG8gZ2V0IG9wZXJhdGlvbiBsb2dzXG5hc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcSwgcmVzKSB7XG4gIGlmIChyZXEubWV0aG9kICE9PSAnR0VUJykge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7IGVycm9yOiAnTWV0aG9kIG5vdCBhbGxvd2VkJyB9KTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgeyBvcGVyYXRpb25JZCwgc2luY2UgfSA9IHJlcS5xdWVyeTtcblxuICAgIGlmICghb3BlcmF0aW9uSWQpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnT3BlcmF0aW9uIElEIGlzIHJlcXVpcmVkJyB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBsb2dzID0gb3BlcmF0aW9uTG9ncy5nZXQob3BlcmF0aW9uSWQpIHx8IFtdO1xuICAgIFxuICAgIC8vIEZpbHRlciBsb2dzIGJ5IHRpbWVzdGFtcCBpZiAnc2luY2UnIGlzIHByb3ZpZGVkXG4gICAgbGV0IGZpbHRlcmVkTG9ncyA9IGxvZ3M7XG4gICAgaWYgKHNpbmNlKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBzaW5jZURhdGUgPSBuZXcgRGF0ZShzaW5jZSk7XG4gICAgICAgIGZpbHRlcmVkTG9ncyA9IGxvZ3MuZmlsdGVyKGxvZyA9PiBuZXcgRGF0ZShsb2cudGltZXN0YW1wKSA+IHNpbmNlRGF0ZSk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnSW52YWxpZCB0aW1lc3RhbXAgZm9ybWF0IGZvciBcInNpbmNlXCIgcGFyYW1ldGVyJyB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgb3BlcmF0aW9uSWQsXG4gICAgICBjb3VudDogZmlsdGVyZWRMb2dzLmxlbmd0aCxcbiAgICAgIGxvZ3M6IGZpbHRlcmVkTG9ncyxcbiAgICAgIG5leHRQb2xsOiBmaWx0ZXJlZExvZ3MubGVuZ3RoID4gMCBcbiAgICAgICAgPyBmaWx0ZXJlZExvZ3NbZmlsdGVyZWRMb2dzLmxlbmd0aCAtIDFdLnRpbWVzdGFtcCBcbiAgICAgICAgOiBzaW5jZSB8fCBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciByZXRyaWV2aW5nIG9wZXJhdGlvbiBsb2dzOicsIGVycm9yKTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogJ0ZhaWxlZCB0byByZXRyaWV2ZSBvcGVyYXRpb24gbG9ncycgfSk7XG4gIH1cbn1cblxuLy8gRXhwb3J0IHdpdGggYXV0aGVudGljYXRpb24gbWlkZGxld2FyZVxuZXhwb3J0IGRlZmF1bHQgKHJlcSwgcmVzKSA9PiBhdXRoZW50aWNhdGUocmVxLCByZXMsIGhhbmRsZXIpOyAiXSwibmFtZXMiOlsiYXV0aGVudGljYXRlIiwicmVxIiwicmVzIiwiaGFuZGxlciIsImF1dGhUb2tlbiIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwic3BsaXQiLCJ2YWxpZFRva2VuIiwicHJvY2VzcyIsImVudiIsIkFETUlOX0FQSV9UT0tFTiIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsIm9wZXJhdGlvbkxvZ3MiLCJNYXAiLCJhZGRPcGVyYXRpb25Mb2ciLCJvcGVyYXRpb25JZCIsImxvZ0VudHJ5IiwiaGFzIiwic2V0IiwibG9ncyIsImdldCIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInB1c2giLCJtZXNzYWdlIiwibGVuZ3RoIiwic2hpZnQiLCJvbmVEYXlBZ28iLCJub3ciLCJpZCIsImVudHJpZXMiLCJvbGRlc3RFbnRyeVRpbWUiLCJnZXRUaW1lIiwiZGVsZXRlIiwibWV0aG9kIiwic2luY2UiLCJxdWVyeSIsImZpbHRlcmVkTG9ncyIsInNpbmNlRGF0ZSIsImZpbHRlciIsImxvZyIsImUiLCJjb3VudCIsIm5leHRQb2xsIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/admin/operation-logs.js\n");

/***/ }),

/***/ "(api)/./pages/api/admin/operation-status.js":
/*!*********************************************!*\
  !*** ./pages/api/admin/operation-status.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   updateOperationStatus: () => (/* binding */ updateOperationStatus)\n/* harmony export */ });\n// Authentication middleware\nconst authenticate = (req, res, handler)=>{\n    const authToken = req.headers.authorization?.split(\" \")[1];\n    const validToken = process.env.ADMIN_API_TOKEN;\n    if (!authToken || authToken !== validToken) {\n        return res.status(401).json({\n            error: \"Unauthorized: Invalid or missing token\"\n        });\n    }\n    return handler(req, res);\n};\n// Simple in-memory storage for operation statuses\n// In production, you would use a database\nconst operationStatuses = new Map();\n// Update operation status - to be called from the main operation process\nconst updateOperationStatus = (operationId, status, result = null)=>{\n    operationStatuses.set(operationId, {\n        status,\n        result,\n        updatedAt: new Date()\n    });\n    // Clean up old entries (older than 24 hours)\n    const oneDayAgo = new Date(Date.now() - 24 * 60 * 60 * 1000);\n    for (const [id, data] of operationStatuses.entries()){\n        if (data.updatedAt < oneDayAgo) {\n            operationStatuses.delete(id);\n        }\n    }\n};\n// Handler to check operation status\nasync function handler(req, res) {\n    if (req.method !== \"GET\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        const { operationId } = req.query;\n        if (!operationId) {\n            return res.status(400).json({\n                error: \"Operation ID is required\"\n            });\n        }\n        const operationStatus = operationStatuses.get(operationId);\n        if (!operationStatus) {\n            return res.status(404).json({\n                error: \"Operation not found or has expired\",\n                note: \"Operation statuses are only kept for 24 hours\"\n            });\n        }\n        return res.status(200).json({\n            operationId,\n            ...operationStatus,\n            updatedAt: operationStatus.updatedAt.toISOString()\n        });\n    } catch (error) {\n        console.error(\"Error checking operation status:\", error);\n        return res.status(500).json({\n            error: \"Failed to check operation status\"\n        });\n    }\n}\n// Export with authentication middleware\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((req, res)=>authenticate(req, res, handler));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvYWRtaW4vb3BlcmF0aW9uLXN0YXR1cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLDRCQUE0QjtBQUM1QixNQUFNQSxlQUFlLENBQUNDLEtBQUtDLEtBQUtDO0lBQzlCLE1BQU1DLFlBQVlILElBQUlJLE9BQU8sQ0FBQ0MsYUFBYSxFQUFFQyxNQUFNLElBQUksQ0FBQyxFQUFFO0lBQzFELE1BQU1DLGFBQWFDLFFBQVFDLEdBQUcsQ0FBQ0MsZUFBZTtJQUU5QyxJQUFJLENBQUNQLGFBQWFBLGNBQWNJLFlBQVk7UUFDMUMsT0FBT04sSUFBSVUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUFFQyxPQUFPO1FBQXlDO0lBQ2hGO0lBRUEsT0FBT1gsUUFBUUYsS0FBS0M7QUFDdEI7QUFFQSxrREFBa0Q7QUFDbEQsMENBQTBDO0FBQzFDLE1BQU1hLG9CQUFvQixJQUFJQztBQUU5Qix5RUFBeUU7QUFDbEUsTUFBTUMsd0JBQXdCLENBQUNDLGFBQWFOLFFBQVFPLFNBQVMsSUFBSTtJQUN0RUosa0JBQWtCSyxHQUFHLENBQUNGLGFBQWE7UUFDakNOO1FBQ0FPO1FBQ0FFLFdBQVcsSUFBSUM7SUFDakI7SUFFQSw2Q0FBNkM7SUFDN0MsTUFBTUMsWUFBWSxJQUFJRCxLQUFLQSxLQUFLRSxHQUFHLEtBQUssS0FBSyxLQUFLLEtBQUs7SUFDdkQsS0FBSyxNQUFNLENBQUNDLElBQUlDLEtBQUssSUFBSVgsa0JBQWtCWSxPQUFPLEdBQUk7UUFDcEQsSUFBSUQsS0FBS0wsU0FBUyxHQUFHRSxXQUFXO1lBQzlCUixrQkFBa0JhLE1BQU0sQ0FBQ0g7UUFDM0I7SUFDRjtBQUNGLEVBQUU7QUFFRixvQ0FBb0M7QUFDcEMsZUFBZXRCLFFBQVFGLEdBQUcsRUFBRUMsR0FBRztJQUM3QixJQUFJRCxJQUFJNEIsTUFBTSxLQUFLLE9BQU87UUFDeEIsT0FBTzNCLElBQUlVLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRUMsT0FBTztRQUFxQjtJQUM1RDtJQUVBLElBQUk7UUFDRixNQUFNLEVBQUVJLFdBQVcsRUFBRSxHQUFHakIsSUFBSTZCLEtBQUs7UUFFakMsSUFBSSxDQUFDWixhQUFhO1lBQ2hCLE9BQU9oQixJQUFJVSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUFFQyxPQUFPO1lBQTJCO1FBQ2xFO1FBRUEsTUFBTWlCLGtCQUFrQmhCLGtCQUFrQmlCLEdBQUcsQ0FBQ2Q7UUFFOUMsSUFBSSxDQUFDYSxpQkFBaUI7WUFDcEIsT0FBTzdCLElBQUlVLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQzFCQyxPQUFPO2dCQUNQbUIsTUFBTTtZQUNSO1FBQ0Y7UUFFQSxPQUFPL0IsSUFBSVUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUMxQks7WUFDQSxHQUFHYSxlQUFlO1lBQ2xCVixXQUFXVSxnQkFBZ0JWLFNBQVMsQ0FBQ2EsV0FBVztRQUNsRDtJQUNGLEVBQUUsT0FBT3BCLE9BQU87UUFDZHFCLFFBQVFyQixLQUFLLENBQUMsb0NBQW9DQTtRQUNsRCxPQUFPWixJQUFJVSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLE9BQU87UUFBbUM7SUFDMUU7QUFDRjtBQUVBLHdDQUF3QztBQUN4QyxpRUFBZSxDQUFDYixLQUFLQyxNQUFRRixhQUFhQyxLQUFLQyxLQUFLQyxRQUFPLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pcG8tc2NyYXBlci8uL3BhZ2VzL2FwaS9hZG1pbi9vcGVyYXRpb24tc3RhdHVzLmpzPzExZWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQXV0aGVudGljYXRpb24gbWlkZGxld2FyZVxuY29uc3QgYXV0aGVudGljYXRlID0gKHJlcSwgcmVzLCBoYW5kbGVyKSA9PiB7XG4gIGNvbnN0IGF1dGhUb2tlbiA9IHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24/LnNwbGl0KCcgJylbMV07XG4gIGNvbnN0IHZhbGlkVG9rZW4gPSBwcm9jZXNzLmVudi5BRE1JTl9BUElfVE9LRU47XG5cbiAgaWYgKCFhdXRoVG9rZW4gfHwgYXV0aFRva2VuICE9PSB2YWxpZFRva2VuKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgZXJyb3I6ICdVbmF1dGhvcml6ZWQ6IEludmFsaWQgb3IgbWlzc2luZyB0b2tlbicgfSk7XG4gIH1cblxuICByZXR1cm4gaGFuZGxlcihyZXEsIHJlcyk7XG59O1xuXG4vLyBTaW1wbGUgaW4tbWVtb3J5IHN0b3JhZ2UgZm9yIG9wZXJhdGlvbiBzdGF0dXNlc1xuLy8gSW4gcHJvZHVjdGlvbiwgeW91IHdvdWxkIHVzZSBhIGRhdGFiYXNlXG5jb25zdCBvcGVyYXRpb25TdGF0dXNlcyA9IG5ldyBNYXAoKTtcblxuLy8gVXBkYXRlIG9wZXJhdGlvbiBzdGF0dXMgLSB0byBiZSBjYWxsZWQgZnJvbSB0aGUgbWFpbiBvcGVyYXRpb24gcHJvY2Vzc1xuZXhwb3J0IGNvbnN0IHVwZGF0ZU9wZXJhdGlvblN0YXR1cyA9IChvcGVyYXRpb25JZCwgc3RhdHVzLCByZXN1bHQgPSBudWxsKSA9PiB7XG4gIG9wZXJhdGlvblN0YXR1c2VzLnNldChvcGVyYXRpb25JZCwge1xuICAgIHN0YXR1cywgLy8gJ3Byb2Nlc3NpbmcnLCAnY29tcGxldGVkJywgJ2ZhaWxlZCdcbiAgICByZXN1bHQsXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgpXG4gIH0pO1xuICBcbiAgLy8gQ2xlYW4gdXAgb2xkIGVudHJpZXMgKG9sZGVyIHRoYW4gMjQgaG91cnMpXG4gIGNvbnN0IG9uZURheUFnbyA9IG5ldyBEYXRlKERhdGUubm93KCkgLSAyNCAqIDYwICogNjAgKiAxMDAwKTtcbiAgZm9yIChjb25zdCBbaWQsIGRhdGFdIG9mIG9wZXJhdGlvblN0YXR1c2VzLmVudHJpZXMoKSkge1xuICAgIGlmIChkYXRhLnVwZGF0ZWRBdCA8IG9uZURheUFnbykge1xuICAgICAgb3BlcmF0aW9uU3RhdHVzZXMuZGVsZXRlKGlkKTtcbiAgICB9XG4gIH1cbn07XG5cbi8vIEhhbmRsZXIgdG8gY2hlY2sgb3BlcmF0aW9uIHN0YXR1c1xuYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuICBpZiAocmVxLm1ldGhvZCAhPT0gJ0dFVCcpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDUpLmpzb24oeyBlcnJvcjogJ01ldGhvZCBub3QgYWxsb3dlZCcgfSk7XG4gIH1cblxuICB0cnkge1xuICAgIGNvbnN0IHsgb3BlcmF0aW9uSWQgfSA9IHJlcS5xdWVyeTtcblxuICAgIGlmICghb3BlcmF0aW9uSWQpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnT3BlcmF0aW9uIElEIGlzIHJlcXVpcmVkJyB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBvcGVyYXRpb25TdGF0dXMgPSBvcGVyYXRpb25TdGF0dXNlcy5nZXQob3BlcmF0aW9uSWQpO1xuXG4gICAgaWYgKCFvcGVyYXRpb25TdGF0dXMpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuanNvbih7IFxuICAgICAgICBlcnJvcjogJ09wZXJhdGlvbiBub3QgZm91bmQgb3IgaGFzIGV4cGlyZWQnLFxuICAgICAgICBub3RlOiAnT3BlcmF0aW9uIHN0YXR1c2VzIGFyZSBvbmx5IGtlcHQgZm9yIDI0IGhvdXJzJ1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgIG9wZXJhdGlvbklkLFxuICAgICAgLi4ub3BlcmF0aW9uU3RhdHVzLFxuICAgICAgdXBkYXRlZEF0OiBvcGVyYXRpb25TdGF0dXMudXBkYXRlZEF0LnRvSVNPU3RyaW5nKClcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjaGVja2luZyBvcGVyYXRpb24gc3RhdHVzOicsIGVycm9yKTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogJ0ZhaWxlZCB0byBjaGVjayBvcGVyYXRpb24gc3RhdHVzJyB9KTtcbiAgfVxufVxuXG4vLyBFeHBvcnQgd2l0aCBhdXRoZW50aWNhdGlvbiBtaWRkbGV3YXJlXG5leHBvcnQgZGVmYXVsdCAocmVxLCByZXMpID0+IGF1dGhlbnRpY2F0ZShyZXEsIHJlcywgaGFuZGxlcik7ICJdLCJuYW1lcyI6WyJhdXRoZW50aWNhdGUiLCJyZXEiLCJyZXMiLCJoYW5kbGVyIiwiYXV0aFRva2VuIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJzcGxpdCIsInZhbGlkVG9rZW4iLCJwcm9jZXNzIiwiZW52IiwiQURNSU5fQVBJX1RPS0VOIiwic3RhdHVzIiwianNvbiIsImVycm9yIiwib3BlcmF0aW9uU3RhdHVzZXMiLCJNYXAiLCJ1cGRhdGVPcGVyYXRpb25TdGF0dXMiLCJvcGVyYXRpb25JZCIsInJlc3VsdCIsInNldCIsInVwZGF0ZWRBdCIsIkRhdGUiLCJvbmVEYXlBZ28iLCJub3ciLCJpZCIsImRhdGEiLCJlbnRyaWVzIiwiZGVsZXRlIiwibWV0aG9kIiwicXVlcnkiLCJvcGVyYXRpb25TdGF0dXMiLCJnZXQiLCJub3RlIiwidG9JU09TdHJpbmciLCJjb25zb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/admin/operation-status.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Fdata-operations&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fadmin%2Fdata-operations.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();